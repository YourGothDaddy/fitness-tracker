{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\Pages\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport InfoCard from '../InfoCard.js';\nimport '../../css/DashboardPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const [goalWeight, setGoalWeight] = useState(0);\n  const [weight, setWeight] = useState(0);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    fetchWeight();\n  }, []);\n  const fetchWeight = async () => {\n    try {\n      const data = await fetchData(`https://localhost:7009/api/user/goals`);\n      console.log(data);\n      setWeight(data.Weight);\n      setGoalWeight(data.GoalWeight);\n      setErrorMessage('');\n    } catch (err) {\n      setErrorMessage(err.message);\n    }\n  };\n  const fetchData = async url => {\n    const response = await fetch(url, {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Fetching data failed');\n    }\n    return response.json();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Fitness Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(InfoCard, {\n        title: \"Calories Consumed Today\",\n        current: 1500,\n        goal: 2000,\n        unit: \"kcal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InfoCard, {\n        title: \"Current Weight\",\n        current: weight,\n        goal: goalWeight,\n        unit: \"kg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n_s(DashboardPage, \"odYnPw8EEP4MWI7zOAkmsB5PUjw=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","InfoCard","jsxDEV","_jsxDEV","DashboardPage","_s","goalWeight","setGoalWeight","weight","setWeight","errorMessage","setErrorMessage","fetchWeight","data","fetchData","console","log","Weight","GoalWeight","err","message","url","response","fetch","method","credentials","headers","ok","Error","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","current","goal","unit","_c","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/Pages/DashboardPage.js"],"sourcesContent":["import React, { useState , useEffect} from 'react';\r\nimport InfoCard from '../InfoCard.js';\r\nimport '../../css/DashboardPage.css';\r\n\r\nconst DashboardPage = () => {\r\n    const [goalWeight, setGoalWeight] = useState(0);\r\n    const [weight, setWeight] = useState(0);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchWeight();\r\n    }, []);\r\n\r\n    const fetchWeight = async () => {\r\n        try {\r\n            const data = await fetchData(`https://localhost:7009/api/user/goals`);\r\n            console.log(data);\r\n            setWeight(data.Weight);\r\n            setGoalWeight(data.GoalWeight);\r\n            setErrorMessage('');\r\n        } catch (err) {\r\n            setErrorMessage(err.message);\r\n        }\r\n    };\r\n\r\n    const fetchData = async (url) => {\r\n        const response = await fetch(url, {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Fetching data failed');\r\n        }\r\n\r\n        return response.json();\r\n    };\r\n  \r\n    return (\r\n      <div className=\"dashboard-page\">\r\n        <h1>Your Fitness Dashboard</h1>\r\n        <div className=\"dashboard-grid\">\r\n          <InfoCard \r\n            title=\"Calories Consumed Today\" \r\n            current={1500} \r\n            goal={2000} \r\n            unit=\"kcal\" \r\n          />\r\n          <InfoCard \r\n            title=\"Current Weight\" \r\n            current={weight} \r\n            goal={goalWeight} \r\n            unit=\"kg\" \r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default DashboardPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,QAAO,OAAO;AAClD,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZY,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMC,SAAS,CAAC,uCAAuC,CAAC;MACrEC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBJ,SAAS,CAACI,IAAI,CAACI,MAAM,CAAC;MACtBV,aAAa,CAACM,IAAI,CAACK,UAAU,CAAC;MAC9BP,eAAe,CAAC,EAAE,CAAC;IACvB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACVR,eAAe,CAACQ,GAAG,CAACC,OAAO,CAAC;IAChC;EACJ,CAAC;EAED,MAAMN,SAAS,GAAG,MAAOO,GAAG,IAAK;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;MAC9BG,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IAC3C;IAEA,OAAON,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC1B,CAAC;EAED,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B5B,OAAA;MAAA4B,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BhC,OAAA;MAAK2B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B5B,OAAA,CAACF,QAAQ;QACPmC,KAAK,EAAC,yBAAyB;QAC/BC,OAAO,EAAE,IAAK;QACdC,IAAI,EAAE,IAAK;QACXC,IAAI,EAAC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACFhC,OAAA,CAACF,QAAQ;QACPmC,KAAK,EAAC,gBAAgB;QACtBC,OAAO,EAAE7B,MAAO;QAChB8B,IAAI,EAAEhC,UAAW;QACjBiC,IAAI,EAAC;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAxDED,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AA0DjB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}