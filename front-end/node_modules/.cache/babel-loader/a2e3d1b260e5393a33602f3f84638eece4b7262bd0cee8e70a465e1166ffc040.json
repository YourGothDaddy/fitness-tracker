{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\Forms\\\\GeneralForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../css/GeneralForm.css';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneralForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  useEffect(() => {\n    const fetchEmail = async () => {\n      try {\n        const response = await fetch('https://localhost:7009/api/user/profile', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Retrieving email failed');\n        }\n        const data = await response.json();\n        setEmail(data.email);\n      } catch (err) {\n        console.error('Failed to fetch email:', err);\n      }\n    };\n    fetchEmail();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('https://localhost:7009/api/user/profile', {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Retrieving email failed');\n      }\n      const data = await response.json();\n      setEmail(data.email);\n    } catch (err) {\n      console.error('Failed to fetch email:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"general-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"General Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      className: \"general-form\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          onChange: e => setEmail(e.target.value),\n          placeholder: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"fancy-button\",\n        children: \"Update Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneralForm, \"eu7YJhgJlsSX6/YyGizBJ2wfHdI=\");\n_c = GeneralForm;\nexport default GeneralForm;\nvar _c;\n$RefreshReg$(_c, \"GeneralForm\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Container","jsxDEV","_jsxDEV","GeneralForm","_s","email","setEmail","fetchEmail","response","fetch","method","credentials","ok","Error","data","json","err","console","error","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","onChange","target","value","placeholder","variant","_c","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/Forms/GeneralForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../css/GeneralForm.css';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\n\r\nconst GeneralForm = () => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchEmail = async () => {\r\n      try {\r\n        const response = await fetch('https://localhost:7009/api/user/profile', {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Retrieving email failed');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setEmail(data.email);\r\n      } catch (err) {\r\n        console.error('Failed to fetch email:', err);\r\n      }\r\n    };\r\n\r\n    fetchEmail();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      const response = await fetch('https://localhost:7009/api/user/profile', {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Retrieving email failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setEmail(data.email);\r\n    } catch (err) {\r\n      console.error('Failed to fetch email:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"general-form\">\r\n      <h2>General Information</h2>\r\n      <Form onSubmit={handleSubmit} className=\"general-form\">\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder={email}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" className=\"fancy-button\">\r\n          Update Email\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GeneralForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}