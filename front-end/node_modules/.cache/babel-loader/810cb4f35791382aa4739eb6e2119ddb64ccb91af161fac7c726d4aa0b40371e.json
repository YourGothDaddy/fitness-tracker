{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\Tables\\\\AllMealsTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport DateNavigation from \"../DateNavigation\";\nimport AddMealForm from \"../Forms/AddMealForm\"; // Add this import\nimport \"../../css/AllMealsTable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllMealsPage = ({\n  setFetchMealsFn,\n  setSelectedDateToDashboard,\n  setShowForm\n}) => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [showAddForm, setShowAddForm] = useState(false); // Add this line\n\n  useEffect(() => {\n    fetchMeals();\n    fetchCalories();\n    setSelectedDateToDashboard(selectedDate);\n  }, [selectedDate]);\n  useEffect(() => {\n    if (setFetchMealsFn) {\n      setFetchMealsFn(() => fetchMeals);\n    }\n    return () => {\n      if (setFetchMealsFn) {\n        setFetchMealsFn(null);\n      }\n    };\n  }, [setFetchMealsFn]);\n  const fetchMeals = async () => {\n    try {\n      const data = await fetchData(`https://localhost:7009/api/meal/all?date=${formatDate(selectedDate)}`);\n      setMeals(data);\n      setErrorMessage(\"\");\n    } catch (err) {\n      setErrorMessage(err.message);\n    }\n  };\n  const fetchCalories = async () => {\n    try {\n      const data = await fetchData(`https://localhost:7009/api/meal/calories?date=${formatDate(selectedDate)}`);\n      setErrorMessage(\"\");\n    } catch (err) {\n      setErrorMessage(err.message);\n    }\n  };\n  const fetchData = async url => {\n    const response = await fetch(url, {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Fetching data failed\");\n    }\n    return response.json();\n  };\n  const formatDate = date => {\n    return date.toISOString().split(\"T\")[0];\n  };\n  const handlePreviousDay = () => {\n    updateSelectedDate(-1);\n  };\n  const handleNextDay = () => {\n    if (!isToday(selectedDate)) {\n      updateSelectedDate(1);\n    }\n  };\n  const updateSelectedDate = days => {\n    setSelectedDate(prevDate => {\n      const newDate = new Date(prevDate);\n      newDate.setDate(prevDate.getDate() + days);\n      return newDate;\n    });\n  };\n  const isToday = date => {\n    return date.toDateString() === new Date().toDateString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-meals-container\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: () => setShowAddForm(true),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateNavigation, {\n      selectedDate: selectedDate,\n      onPreviousDay: handlePreviousDay,\n      onNextDay: handleNextDay,\n      isToday: isToday(selectedDate)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), showAddForm && /*#__PURE__*/_jsxDEV(AddMealForm, {\n      onAddMeal: () => {\n        fetchMeals();\n        setShowAddForm(false);\n      },\n      selectedDate: selectedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MealTable, {\n      meals: meals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(AllMealsPage, \"hWiiJJnTDugBV3Q1VlRdrbrPAY8=\");\n_c = AllMealsPage;\nconst MealTable = ({\n  meals\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"table-wrapper\",\n  children: /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"meals-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Meal Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Meal of the Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Calories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: meals.map(meal => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: meal.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: MealOfTheDayLabel(meal.mealOfTheDay)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: meal.calories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, meal.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 133,\n  columnNumber: 3\n}, this);\n_c2 = MealTable;\nconst MealOfTheDayLabel = mealOfTheDay => {\n  const mealLabels = {\n    0: \"Breakfast\",\n    1: \"Lunch\",\n    2: \"Dinner\",\n    3: \"Snack\"\n  };\n  return mealLabels[mealOfTheDay] || \"Unknown\";\n};\n_c3 = MealOfTheDayLabel;\nexport default AllMealsPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AllMealsPage\");\n$RefreshReg$(_c2, \"MealTable\");\n$RefreshReg$(_c3, \"MealOfTheDayLabel\");","map":{"version":3,"names":["React","useEffect","useState","DateNavigation","AddMealForm","jsxDEV","_jsxDEV","AllMealsPage","setFetchMealsFn","setSelectedDateToDashboard","setShowForm","_s","meals","setMeals","errorMessage","setErrorMessage","selectedDate","setSelectedDate","Date","showAddForm","setShowAddForm","fetchMeals","fetchCalories","data","fetchData","formatDate","err","message","url","response","fetch","method","credentials","headers","ok","Error","json","date","toISOString","split","handlePreviousDay","updateSelectedDate","handleNextDay","isToday","days","prevDate","newDate","setDate","getDate","toDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onPreviousDay","onNextDay","onAddMeal","MealTable","_c","map","meal","name","MealOfTheDayLabel","mealOfTheDay","calories","id","_c2","mealLabels","_c3","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/Tables/AllMealsTable.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport DateNavigation from \"../DateNavigation\";\r\nimport AddMealForm from \"../Forms/AddMealForm\"; // Add this import\r\nimport \"../../css/AllMealsTable.css\";\r\n\r\nconst AllMealsPage = ({\r\n  setFetchMealsFn,\r\n  setSelectedDateToDashboard,\r\n  setShowForm,\r\n}) => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [showAddForm, setShowAddForm] = useState(false); // Add this line\r\n\r\n  useEffect(() => {\r\n    fetchMeals();\r\n    fetchCalories();\r\n    setSelectedDateToDashboard(selectedDate);\r\n  }, [selectedDate]);\r\n\r\n  useEffect(() => {\r\n    if (setFetchMealsFn) {\r\n      setFetchMealsFn(() => fetchMeals);\r\n    }\r\n\r\n    return () => {\r\n      if (setFetchMealsFn) {\r\n        setFetchMealsFn(null);\r\n      }\r\n    };\r\n  }, [setFetchMealsFn]);\r\n\r\n  const fetchMeals = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        `https://localhost:7009/api/meal/all?date=${formatDate(selectedDate)}`\r\n      );\r\n      setMeals(data);\r\n      setErrorMessage(\"\");\r\n    } catch (err) {\r\n      setErrorMessage(err.message);\r\n    }\r\n  };\r\n\r\n  const fetchCalories = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        `https://localhost:7009/api/meal/calories?date=${formatDate(\r\n          selectedDate\r\n        )}`\r\n      );\r\n      setErrorMessage(\"\");\r\n    } catch (err) {\r\n      setErrorMessage(err.message);\r\n    }\r\n  };\r\n\r\n  const fetchData = async (url) => {\r\n    const response = await fetch(url, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Fetching data failed\");\r\n    }\r\n\r\n    return response.json();\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    return date.toISOString().split(\"T\")[0];\r\n  };\r\n\r\n  const handlePreviousDay = () => {\r\n    updateSelectedDate(-1);\r\n  };\r\n\r\n  const handleNextDay = () => {\r\n    if (!isToday(selectedDate)) {\r\n      updateSelectedDate(1);\r\n    }\r\n  };\r\n\r\n  const updateSelectedDate = (days) => {\r\n    setSelectedDate((prevDate) => {\r\n      const newDate = new Date(prevDate);\r\n      newDate.setDate(prevDate.getDate() + days);\r\n      return newDate;\r\n    });\r\n  };\r\n\r\n  const isToday = (date) => {\r\n    return date.toDateString() === new Date().toDateString();\r\n  };\r\n\r\n  return (\r\n    <div className=\"all-meals-container\">\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n      <div className=\"button-section\">\r\n        <button className=\"add-button\" onClick={() => setShowAddForm(true)}>\r\n          Add\r\n        </button>\r\n      </div>\r\n      <DateNavigation\r\n        selectedDate={selectedDate}\r\n        onPreviousDay={handlePreviousDay}\r\n        onNextDay={handleNextDay}\r\n        isToday={isToday(selectedDate)}\r\n      />\r\n\r\n      {showAddForm && (\r\n        <AddMealForm\r\n          onAddMeal={() => {\r\n            fetchMeals();\r\n            setShowAddForm(false);\r\n          }}\r\n          selectedDate={selectedDate}\r\n        />\r\n      )}\r\n\r\n      <MealTable meals={meals} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MealTable = ({ meals }) => (\r\n  <div className=\"table-wrapper\">\r\n    <table className=\"meals-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Meal Name</th>\r\n          <th>Meal of the Day</th>\r\n          <th>Calories</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {meals.map((meal) => (\r\n          <tr key={meal.id}>\r\n            <td>{meal.name}</td>\r\n            <td>{MealOfTheDayLabel(meal.mealOfTheDay)}</td>\r\n            <td>{meal.calories}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n\r\nconst MealOfTheDayLabel = (mealOfTheDay) => {\r\n  const mealLabels = {\r\n    0: \"Breakfast\",\r\n    1: \"Lunch\",\r\n    2: \"Dinner\",\r\n    3: \"Snack\",\r\n  };\r\n  return mealLabels[mealOfTheDay] || \"Unknown\";\r\n};\r\n\r\nexport default AllMealsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}