{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\Forms\\\\AddConsumableForm.js\",\n  _s = $RefreshSig$();\n// AddConsumableForm.jsx\nimport React, { useState } from 'react';\nimport { Container, Form, Button, Accordion, Card, Row, Col, Alert, Spinner } from 'react-bootstrap';\nimport '../../css/AddConsumableForm.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddConsumableForm = () => {\n  _s();\n  const [itemName, setItemName] = useState('');\n  const [type, setType] = useState('');\n  const [calories, setCalories] = useState(0);\n  const [protein, setProtein] = useState(0.0);\n  const [carbohydrates, setCarbohydrates] = useState(0.0);\n  const [fat, setFat] = useState(0.0);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Handle loading state\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Initialize state for nutritional information\n  const [nutritionalInfo, setNutritionalInfo] = useState({\n    Carbohydrates: {\n      Fibers: 0.0,\n      Starch: 0.0,\n      Sugars: 0.0,\n      galactose: 0.0,\n      Glucose: 0.0,\n      Sucrose: 0.0,\n      lactose: 0.0,\n      Maltose: 0.0,\n      Fructose: 0.0\n    },\n    Vitamins: {\n      Betaine: 0.0,\n      \"Vitamin A\": 0.0,\n      \"Vitamin B1 (thiamine)\": 0.0,\n      \"Vitamin B2 (riboflavin)\": 0.0,\n      \"Vitamin B3 (niacin)\": 0.0,\n      \"Vitamin B4 (choline)\": 0.0,\n      \"Vitamin B5 (Pantothenic Acid)\": 0.0,\n      \"Vitamin B6 (Pyridoxine)\": 0.0,\n      \"Vitamin B9 (Folic Acid)\": 0.0,\n      \"Vitamin B12 (Cobalcamine)\": 0.0,\n      \"Vitamin C\": 0.0,\n      \"Vitamin D\": 0.0,\n      \"Vitamin E\": 0.0,\n      \"Vitamin K1\": 0.0,\n      \"Vitamin K2 (MK04)\": 0.0\n    },\n    AminoAcids: {\n      Alanine: 0.0,\n      Arginine: 0.0,\n      \"Aspartic acid\": 0.0,\n      Valin: 0.0,\n      Glycine: 0.0,\n      glutamine: 0.0,\n      Isoleucine: 0.0,\n      Leucine: 0.0,\n      Lysine: 0.0,\n      Methionine: 0.0,\n      Proline: 0.0,\n      Serine: 0.0,\n      Tyrosine: 0.0,\n      Threonine: 0.0,\n      tryptophan: 0.0,\n      Phenylalanine: 0.0,\n      Hydroxyproline: 0.0,\n      histidine: 0.0,\n      Cystine: 0.0\n    },\n    Fats: {\n      \"Monounsaturated fats\": 0.0,\n      \"Polyunsaturated fats\": 0.0,\n      \"Saturated fat\": 0.0,\n      \"Trans fats\": 0.0\n    },\n    Minerals: {\n      Iron: 0.0,\n      Potassium: 0.0,\n      Calcium: 0.0,\n      Magnesium: 0.0,\n      Manganese: 0.0,\n      Med: 0.0,\n      Sodium: 0.0,\n      Selenium: 0.0,\n      Fluoride: 0.0,\n      Phosphorus: 0.0,\n      Zinc: 0.0\n    },\n    Sterols: {\n      Cholesterol: 0.0,\n      Phytosterols: 0.0,\n      Stigmasteroli: 0.0,\n      Campesteroli: 0.0,\n      \"Beta-sitosterols\": 0.0\n    },\n    More: {\n      Alcohol: 0.0,\n      Water: 0.0,\n      Caffeine: 0.0,\n      Theobromine: 0.0,\n      Ashes: 0.0\n    }\n  });\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrorMessage('');\n    setSuccessMessage('');\n    const consumableItem = {\n      Name: itemName,\n      CaloriesPer100g: calories,\n      ProteinPer100g: protein,\n      CarbohydratePer100g: carbohydrates,\n      FatPer100g: fat,\n      Type: type,\n      NutritionalInformation: nutritionalInfo\n    };\n    console.log(JSON.stringify(consumableItem));\n    try {\n      const response = await fetch('https://localhost:7009/api/admin/add-consumable-item', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(consumableItem)\n      });\n      if (!response.ok) {\n        throw new Error('Adding a consumable item failed');\n      }\n      setSuccessMessage('Consumable item added successfully!');\n      // Optionally, reset the form\n      resetForm();\n    } catch (err) {\n      setErrorMessage(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Reset form fields\n  const resetForm = () => {\n    setItemName('');\n    setType('');\n    setCalories(0);\n    setProtein(0.0);\n    setCarbohydrates(0.0);\n    setFat(0.0);\n    setNutritionalInfo({\n      Carbohydrates: {\n        Fibers: 0.0,\n        Starch: 0.0,\n        Sugars: 0.0,\n        Galactose: 0.0,\n        Glucose: 0.0,\n        Sucrose: 0.0,\n        Lactose: 0.0,\n        Maltose: 0.0,\n        Fructose: 0.0\n      },\n      Vitamins: {\n        Betaine: 0.0,\n        'Vitamin A': 0.0,\n        'Vitamin B1 (Thiamine)': 0.0,\n        'Vitamin B2 (Riboflavin)': 0.0,\n        'Vitamin B3 (Niacin)': 0.0,\n        'Vitamin B4 (Choline)': 0.0,\n        'Vitamin B5 (Pantothenic Acid)': 0.0,\n        'Vitamin B6 (Pyridoxine)': 0.0,\n        'Vitamin B9 (Folic Acid)': 0.0,\n        'Vitamin B12 (Cobalamin)': 0.0,\n        'Vitamin C': 0.0,\n        'Vitamin D': 0.0,\n        'Vitamin E': 0.0,\n        'Vitamin K1': 0.0,\n        'Vitamin K2 (MK04)': 0.0\n      },\n      AminoAcids: {\n        Alanine: 0.0,\n        Arginine: 0.0,\n        'Aspartic Acid': 0.0,\n        Valin: 0.0,\n        Glycine: 0.0,\n        Glutamine: 0.0,\n        Isoleucine: 0.0,\n        Leucine: 0.0,\n        Lysine: 0.0,\n        Methionine: 0.0,\n        Proline: 0.0,\n        Serine: 0.0,\n        Tyrosine: 0.0,\n        Threonine: 0.0,\n        Tryptophan: 0.0,\n        Phenylalanine: 0.0,\n        Hydroxyproline: 0.0,\n        Histidine: 0.0,\n        Cystine: 0.0\n      },\n      Fats: {\n        'Monounsaturated Fats': 0.0,\n        'Polyunsaturated Fats': 0.0,\n        'Saturated Fat': 0.0,\n        'Trans Fats': 0.0\n      },\n      Minerals: {\n        Iron: 0.0,\n        Potassium: 0.0,\n        Calcium: 0.0,\n        Magnesium: 0.0,\n        Manganese: 0.0,\n        Med: 0.0,\n        Sodium: 0.0,\n        Selenium: 0.0,\n        Fluoride: 0.0,\n        Phosphorus: 0.0,\n        Zinc: 0.0\n      },\n      Sterols: {\n        Cholesterol: 0.0,\n        Phytosterols: 0.0,\n        Stigmasteroli: 0.0,\n        Campesteroli: 0.0,\n        'Beta-sitosterols': 0.0\n      },\n      More: {\n        Alcohol: 0.0,\n        Water: 0.0,\n        Caffeine: 0.0,\n        Theobromine: 0.0,\n        Ashes: 0.0\n      }\n    });\n  };\n\n  // Handle change in main form fields\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    switch (name) {\n      case 'name':\n        setItemName(value);\n        break;\n      case 'type':\n        setType(value);\n        break;\n      case 'caloriesPer100g':\n        setCalories(parseFloat(value));\n        break;\n      case 'proteinPer100g':\n        setProtein(parseFloat(value));\n        break;\n      case 'carbohydratePer100g':\n        setCarbohydrates(parseFloat(value));\n        break;\n      case 'fatPer100g':\n        setFat(parseFloat(value));\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Handle change in nutritional information\n  const handleNutritionalChange = (section, key, value) => {\n    setNutritionalInfo(prevInfo => ({\n      ...prevInfo,\n      [section]: {\n        ...prevInfo[section],\n        [key]: parseFloat(value)\n      }\n    }));\n  };\n\n  // Render form fields for different sections\n  const renderNutritionalSection = (sectionName, sectionData, title) => /*#__PURE__*/_jsxDEV(Accordion.Item, {\n    eventKey: sectionName,\n    children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: Object.entries(sectionData).map(([key, value]) => /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          sm: 6,\n          xs: 12,\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: `${sectionName}-${key}`,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              step: \"0.01\",\n              name: key,\n              value: value,\n              onChange: e => handleNutritionalChange(sectionName, key, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 29\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this)]\n  }, sectionName, true, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"add-consumable-form mt-5 mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Add New Consumable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      className: \"mt-3\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      className: \"mt-3\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"name\",\n          value: itemName,\n          onChange: handleChange,\n          required: true,\n          placeholder: \"Enter item name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"type\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          name: \"type\",\n          value: type,\n          onChange: handleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select meal type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Drink\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Meal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"caloriesPer100g\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Calories per 100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          name: \"caloriesPer100g\",\n          value: calories,\n          onChange: handleChange,\n          required: true,\n          placeholder: \"Enter calories per 100g\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"proteinPer100g\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Protein per 100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          step: \"0.01\",\n          name: \"proteinPer100g\",\n          value: protein,\n          onChange: handleChange,\n          required: true,\n          placeholder: \"Enter protein per 100g\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"carbohydratePer100g\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Carbohydrate per 100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          step: \"0.01\",\n          name: \"carbohydratePer100g\",\n          value: carbohydrates,\n          onChange: handleChange,\n          required: true,\n          placeholder: \"Enter carbohydrate per 100g\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"fatPer100g\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Fat per 100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          step: \"0.01\",\n          name: \"fatPer100g\",\n          value: fat,\n          onChange: handleChange,\n          required: true,\n          placeholder: \"Enter fat per 100g\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultActiveKey: \"0\",\n        className: \"mb-3\",\n        children: [renderNutritionalSection('Carbohydrates', nutritionalInfo.Carbohydrates, 'Carbohydrate Information'), renderNutritionalSection('Vitamins', nutritionalInfo.Vitamins, 'Vitamins'), renderNutritionalSection('AminoAcids', nutritionalInfo.AminoAcids, 'Amino Acids'), renderNutritionalSection('Fats', nutritionalInfo.Fats, 'Fats'), renderNutritionalSection('Minerals', nutritionalInfo.Minerals, 'Minerals'), renderNutritionalSection('Sterols', nutritionalInfo.Sterols, 'Sterols'), renderNutritionalSection('More', nutritionalInfo.More, 'Additional Information')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Spinner, {\n            as: \"span\",\n            animation: \"border\",\n            size: \"sm\",\n            role: \"status\",\n            \"aria-hidden\": \"true\",\n            className: \"me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 29\n          }, this), \"Loading...\"]\n        }, void 0, true) : 'Add Consumable'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 9\n  }, this);\n};\n_s(AddConsumableForm, \"3C42I8GsuD+BCsH2viZDoDQDhXc=\");\n_c = AddConsumableForm;\nexport default AddConsumableForm;\nvar _c;\n$RefreshReg$(_c, \"AddConsumableForm\");","map":{"version":3,"names":["React","useState","Container","Form","Button","Accordion","Card","Row","Col","Alert","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","AddConsumableForm","_s","itemName","setItemName","type","setType","calories","setCalories","protein","setProtein","carbohydrates","setCarbohydrates","fat","setFat","errorMessage","setErrorMessage","successMessage","setSuccessMessage","isLoading","setIsLoading","nutritionalInfo","setNutritionalInfo","Carbohydrates","Fibers","Starch","Sugars","galactose","Glucose","Sucrose","lactose","Maltose","Fructose","Vitamins","Betaine","AminoAcids","Alanine","Arginine","Valin","Glycine","glutamine","Isoleucine","Leucine","Lysine","Methionine","Proline","Serine","Tyrosine","Threonine","tryptophan","Phenylalanine","Hydroxyproline","histidine","Cystine","Fats","Minerals","Iron","Potassium","Calcium","Magnesium","Manganese","Med","Sodium","Selenium","Fluoride","Phosphorus","Zinc","Sterols","Cholesterol","Phytosterols","Stigmasteroli","Campesteroli","More","Alcohol","Water","Caffeine","Theobromine","Ashes","handleSubmit","e","preventDefault","consumableItem","Name","CaloriesPer100g","ProteinPer100g","CarbohydratePer100g","FatPer100g","Type","NutritionalInformation","console","log","JSON","stringify","response","fetch","method","credentials","headers","body","ok","Error","resetForm","err","message","Galactose","Lactose","Glutamine","Tryptophan","Histidine","handleChange","name","value","target","parseFloat","handleNutritionalChange","section","key","prevInfo","renderNutritionalSection","sectionName","sectionData","title","Item","eventKey","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","Object","entries","map","md","sm","xs","className","Group","controlId","Label","Control","step","onChange","variant","onSubmit","required","placeholder","as","defaultActiveKey","disabled","animation","size","role","_c","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/Forms/AddConsumableForm.js"],"sourcesContent":["// AddConsumableForm.jsx\r\nimport React, { useState } from 'react';\r\nimport {\r\n    Container,\r\n    Form,\r\n    Button,\r\n    Accordion,\r\n    Card,\r\n    Row,\r\n    Col,\r\n    Alert,\r\n    Spinner,\r\n} from 'react-bootstrap';\r\nimport '../../css/AddConsumableForm.css';\r\n\r\nconst AddConsumableForm = () => {\r\n    const [itemName, setItemName] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [calories, setCalories] = useState(0);\r\n    const [protein, setProtein] = useState(0.0);\r\n    const [carbohydrates, setCarbohydrates] = useState(0.0);\r\n    const [fat, setFat] = useState(0.0);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    // Handle loading state\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    // Initialize state for nutritional information\r\n    const [nutritionalInfo, setNutritionalInfo] = useState({\r\n        Carbohydrates: {\r\n          Fibers: 0.0,\r\n          Starch: 0.0,\r\n          Sugars: 0.0,\r\n          galactose: 0.0,\r\n          Glucose: 0.0,\r\n          Sucrose: 0.0,\r\n          lactose: 0.0,\r\n          Maltose: 0.0,\r\n          Fructose: 0.0,\r\n        },\r\n        Vitamins: {\r\n          Betaine: 0.0,\r\n          \"Vitamin A\": 0.0,\r\n          \"Vitamin B1 (thiamine)\": 0.0,\r\n          \"Vitamin B2 (riboflavin)\": 0.0,\r\n          \"Vitamin B3 (niacin)\": 0.0,\r\n          \"Vitamin B4 (choline)\": 0.0,\r\n          \"Vitamin B5 (Pantothenic Acid)\": 0.0,\r\n          \"Vitamin B6 (Pyridoxine)\": 0.0,\r\n          \"Vitamin B9 (Folic Acid)\": 0.0,\r\n          \"Vitamin B12 (Cobalcamine)\": 0.0,\r\n          \"Vitamin C\": 0.0,\r\n          \"Vitamin D\": 0.0,\r\n          \"Vitamin E\": 0.0,\r\n          \"Vitamin K1\": 0.0,\r\n          \"Vitamin K2 (MK04)\": 0.0,\r\n        },\r\n        AminoAcids: {\r\n          Alanine: 0.0,\r\n          Arginine: 0.0,\r\n          \"Aspartic acid\": 0.0,\r\n          Valin: 0.0,\r\n          Glycine: 0.0,\r\n          glutamine: 0.0,\r\n          Isoleucine: 0.0,\r\n          Leucine: 0.0,\r\n          Lysine: 0.0,\r\n          Methionine: 0.0,\r\n          Proline: 0.0,\r\n          Serine: 0.0,\r\n          Tyrosine: 0.0,\r\n          Threonine: 0.0,\r\n          tryptophan: 0.0,\r\n          Phenylalanine: 0.0,\r\n          Hydroxyproline: 0.0,\r\n          histidine: 0.0,\r\n          Cystine: 0.0,\r\n        },\r\n        Fats: {\r\n          \"Monounsaturated fats\": 0.0,\r\n          \"Polyunsaturated fats\": 0.0,\r\n          \"Saturated fat\": 0.0,\r\n          \"Trans fats\": 0.0,\r\n        },\r\n        Minerals: {\r\n          Iron: 0.0,\r\n          Potassium: 0.0,\r\n          Calcium: 0.0,\r\n          Magnesium: 0.0,\r\n          Manganese: 0.0,\r\n          Med: 0.0,\r\n          Sodium: 0.0,\r\n          Selenium: 0.0,\r\n          Fluoride: 0.0,\r\n          Phosphorus: 0.0,\r\n          Zinc: 0.0,\r\n        },\r\n        Sterols: {\r\n          Cholesterol: 0.0,\r\n          Phytosterols: 0.0,\r\n          Stigmasteroli: 0.0,\r\n          Campesteroli: 0.0,\r\n          \"Beta-sitosterols\": 0.0,\r\n        },\r\n        More: {\r\n          Alcohol: 0.0,\r\n          Water: 0.0,\r\n          Caffeine: 0.0,\r\n          Theobromine: 0.0,\r\n          Ashes: 0.0,\r\n        },\r\n      });\r\n    \r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        setErrorMessage('');\r\n        setSuccessMessage('');\r\n\r\n        const consumableItem = {\r\n            Name: itemName,\r\n            CaloriesPer100g: calories,\r\n            ProteinPer100g: protein,\r\n            CarbohydratePer100g: carbohydrates,\r\n            FatPer100g: fat,\r\n            Type: type,\r\n            NutritionalInformation: nutritionalInfo,\r\n        };\r\n\r\n        console.log(JSON.stringify(consumableItem));\r\n\r\n        try {\r\n            const response = await fetch('https://localhost:7009/api/admin/add-consumable-item',\r\n                {\r\n                    method: 'POST',\r\n                    credentials: 'include',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(consumableItem),\r\n                }\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Adding a consumable item failed');\r\n            }\r\n\r\n            setSuccessMessage('Consumable item added successfully!');\r\n            // Optionally, reset the form\r\n            resetForm();\r\n        } catch (err) {\r\n            setErrorMessage(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Reset form fields\r\n    const resetForm = () => {\r\n        setItemName('');\r\n        setType('');\r\n        setCalories(0);\r\n        setProtein(0.0);\r\n        setCarbohydrates(0.0);\r\n        setFat(0.0);\r\n        setNutritionalInfo({\r\n            Carbohydrates: {\r\n                Fibers: 0.0,\r\n                Starch: 0.0,\r\n                Sugars: 0.0,\r\n                Galactose: 0.0,\r\n                Glucose: 0.0,\r\n                Sucrose: 0.0,\r\n                Lactose: 0.0,\r\n                Maltose: 0.0,\r\n                Fructose: 0.0,\r\n            },\r\n            Vitamins: {\r\n                Betaine: 0.0,\r\n                'Vitamin A': 0.0,\r\n                'Vitamin B1 (Thiamine)': 0.0,\r\n                'Vitamin B2 (Riboflavin)': 0.0,\r\n                'Vitamin B3 (Niacin)': 0.0,\r\n                'Vitamin B4 (Choline)': 0.0,\r\n                'Vitamin B5 (Pantothenic Acid)': 0.0,\r\n                'Vitamin B6 (Pyridoxine)': 0.0,\r\n                'Vitamin B9 (Folic Acid)': 0.0,\r\n                'Vitamin B12 (Cobalamin)': 0.0,\r\n                'Vitamin C': 0.0,\r\n                'Vitamin D': 0.0,\r\n                'Vitamin E': 0.0,\r\n                'Vitamin K1': 0.0,\r\n                'Vitamin K2 (MK04)': 0.0,\r\n            },\r\n            AminoAcids: {\r\n                Alanine: 0.0,\r\n                Arginine: 0.0,\r\n                'Aspartic Acid': 0.0,\r\n                Valin: 0.0,\r\n                Glycine: 0.0,\r\n                Glutamine: 0.0,\r\n                Isoleucine: 0.0,\r\n                Leucine: 0.0,\r\n                Lysine: 0.0,\r\n                Methionine: 0.0,\r\n                Proline: 0.0,\r\n                Serine: 0.0,\r\n                Tyrosine: 0.0,\r\n                Threonine: 0.0,\r\n                Tryptophan: 0.0,\r\n                Phenylalanine: 0.0,\r\n                Hydroxyproline: 0.0,\r\n                Histidine: 0.0,\r\n                Cystine: 0.0,\r\n            },\r\n            Fats: {\r\n                'Monounsaturated Fats': 0.0,\r\n                'Polyunsaturated Fats': 0.0,\r\n                'Saturated Fat': 0.0,\r\n                'Trans Fats': 0.0,\r\n            },\r\n            Minerals: {\r\n                Iron: 0.0,\r\n                Potassium: 0.0,\r\n                Calcium: 0.0,\r\n                Magnesium: 0.0,\r\n                Manganese: 0.0,\r\n                Med: 0.0,\r\n                Sodium: 0.0,\r\n                Selenium: 0.0,\r\n                Fluoride: 0.0,\r\n                Phosphorus: 0.0,\r\n                Zinc: 0.0,\r\n            },\r\n            Sterols: {\r\n                Cholesterol: 0.0,\r\n                Phytosterols: 0.0,\r\n                Stigmasteroli: 0.0,\r\n                Campesteroli: 0.0,\r\n                'Beta-sitosterols': 0.0,\r\n            },\r\n            More: {\r\n                Alcohol: 0.0,\r\n                Water: 0.0,\r\n                Caffeine: 0.0,\r\n                Theobromine: 0.0,\r\n                Ashes: 0.0,\r\n            },\r\n        });\r\n    };\r\n\r\n    // Handle change in main form fields\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setItemName(value);\r\n                break;\r\n            case 'type':\r\n                setType(value);\r\n                break;\r\n            case 'caloriesPer100g':\r\n                setCalories(parseFloat(value));\r\n                break;\r\n            case 'proteinPer100g':\r\n                setProtein(parseFloat(value));\r\n                break;\r\n            case 'carbohydratePer100g':\r\n                setCarbohydrates(parseFloat(value));\r\n                break;\r\n            case 'fatPer100g':\r\n                setFat(parseFloat(value));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    // Handle change in nutritional information\r\n    const handleNutritionalChange = (section, key, value) => {\r\n        setNutritionalInfo((prevInfo) => ({\r\n            ...prevInfo,\r\n            [section]: {\r\n                ...prevInfo[section],\r\n                [key]: parseFloat(value),\r\n            },\r\n        }));\r\n    };\r\n\r\n    // Render form fields for different sections\r\n    const renderNutritionalSection = (sectionName, sectionData, title) => (\r\n        <Accordion.Item eventKey={sectionName} key={sectionName}>\r\n            <Accordion.Header>{title}</Accordion.Header>\r\n            <Accordion.Body>\r\n                <Row>\r\n                    {Object.entries(sectionData).map(([key, value]) => (\r\n                        <Col md={4} sm={6} xs={12} className=\"mb-3\" key={key}>\r\n                            <Form.Group controlId={`${sectionName}-${key}`}>\r\n                                <Form.Label>{key}</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    step=\"0.01\"\r\n                                    name={key}\r\n                                    value={value}\r\n                                    onChange={(e) => handleNutritionalChange(sectionName, key, e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            </Accordion.Body>\r\n        </Accordion.Item>\r\n    );\r\n\r\n    return (\r\n        <Container className=\"add-consumable-form mt-5 mb-5\">\r\n            <h2 className=\"mb-4\">Add New Consumable</h2>\r\n            {/* Feedback Messages */}\r\n            {errorMessage && (\r\n                <Alert variant=\"danger\" className=\"mt-3\">\r\n                    {errorMessage}\r\n                </Alert>\r\n            )}\r\n            {successMessage && (\r\n                <Alert variant=\"success\" className=\"mt-3\">\r\n                    {successMessage}\r\n                </Alert>\r\n            )}\r\n            <Form onSubmit={handleSubmit}>\r\n                {/* Name */}\r\n                <Form.Group controlId=\"name\" className=\"mb-3\">\r\n                    <Form.Label>Name:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={itemName}\r\n                        onChange={handleChange}\r\n                        required\r\n                        placeholder=\"Enter item name\"\r\n                    />\r\n                </Form.Group>\r\n\r\n                {/* Type */}\r\n                <Form.Group controlId=\"type\" className=\"mb-3\">\r\n                    <Form.Label>Type:</Form.Label>\r\n                    <Form.Control as=\"select\" name=\"type\" value={type} onChange={handleChange} required>\r\n                        <option value=\"\">Select meal type</option>\r\n                        <option value=\"0\">Food</option>\r\n                        <option value=\"1\">Drink</option>\r\n                        <option value=\"2\">Meal</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                {/* Calories */}\r\n                <Form.Group controlId=\"caloriesPer100g\" className=\"mb-3\">\r\n                    <Form.Label>Calories per 100g:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"number\"\r\n                        name=\"caloriesPer100g\"\r\n                        value={calories}\r\n                        onChange={handleChange}\r\n                        required\r\n                        placeholder=\"Enter calories per 100g\"\r\n                    />\r\n                </Form.Group>\r\n\r\n                {/* Protein */}\r\n                <Form.Group controlId=\"proteinPer100g\" className=\"mb-3\">\r\n                    <Form.Label>Protein per 100g:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        name=\"proteinPer100g\"\r\n                        value={protein}\r\n                        onChange={handleChange}\r\n                        required\r\n                        placeholder=\"Enter protein per 100g\"\r\n                    />\r\n                </Form.Group>\r\n\r\n                {/* Carbohydrate */}\r\n                <Form.Group controlId=\"carbohydratePer100g\" className=\"mb-3\">\r\n                    <Form.Label>Carbohydrate per 100g:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        name=\"carbohydratePer100g\"\r\n                        value={carbohydrates}\r\n                        onChange={handleChange}\r\n                        required\r\n                        placeholder=\"Enter carbohydrate per 100g\"\r\n                    />\r\n                </Form.Group>\r\n\r\n                {/* Fat */}\r\n                <Form.Group controlId=\"fatPer100g\" className=\"mb-3\">\r\n                    <Form.Label>Fat per 100g:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        name=\"fatPer100g\"\r\n                        value={fat}\r\n                        onChange={handleChange}\r\n                        required\r\n                        placeholder=\"Enter fat per 100g\"\r\n                    />\r\n                </Form.Group>\r\n\r\n                {/* Nutritional Information */}\r\n                <Accordion defaultActiveKey=\"0\" className=\"mb-3\">\r\n                    {renderNutritionalSection('Carbohydrates', nutritionalInfo.Carbohydrates, 'Carbohydrate Information')}\r\n                    {renderNutritionalSection('Vitamins', nutritionalInfo.Vitamins, 'Vitamins')}\r\n                    {renderNutritionalSection('AminoAcids', nutritionalInfo.AminoAcids, 'Amino Acids')}\r\n                    {renderNutritionalSection('Fats', nutritionalInfo.Fats, 'Fats')}\r\n                    {renderNutritionalSection('Minerals', nutritionalInfo.Minerals, 'Minerals')}\r\n                    {renderNutritionalSection('Sterols', nutritionalInfo.Sterols, 'Sterols')}\r\n                    {renderNutritionalSection('More', nutritionalInfo.More, 'Additional Information')}\r\n                </Accordion>\r\n\r\n                {/* Submit Button */}\r\n                <Button variant=\"primary\" type=\"submit\" disabled={isLoading}>\r\n                    {isLoading ? (\r\n                        <>\r\n                            <Spinner\r\n                                as=\"span\"\r\n                                animation=\"border\"\r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\"\r\n                                className=\"me-2\"\r\n                            />\r\n                            Loading...\r\n                        </>\r\n                    ) : (\r\n                        'Add Consumable'\r\n                    )}\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default AddConsumableForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}