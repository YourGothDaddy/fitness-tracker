{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\Tables\\\\AllMealsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport DateNavigation from \"../DateNavigation\";\nimport \"../../css/AllMealsPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllMealsPage = ({\n  setFetchMealsFn\n}) => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [calories, setCalories] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  useEffect(() => {\n    fetchMeals();\n    fetchCalories();\n  }, [selectedDate]);\n  useEffect(() => {\n    if (setFetchMealsFn) {\n      setFetchMealsFn(() => fetchMeals);\n    }\n    return () => {\n      if (setFetchMealsFn) {\n        setFetchMealsFn(null);\n      }\n    };\n  }, [setFetchMealsFn]);\n  const fetchMeals = async () => {\n    try {\n      const data = await fetchData(`https://localhost:7009/api/meal/all?date=${formatDate(selectedDate)}`);\n      setMeals(data);\n      setErrorMessage(\"\");\n    } catch (err) {\n      setErrorMessage(err.message);\n    }\n  };\n  const fetchCalories = async () => {\n    try {\n      const data = await fetchData(`https://localhost:7009/api/meal/calories?date=${formatDate(selectedDate)}`);\n      setCalories(data);\n      setErrorMessage(\"\");\n    } catch (err) {\n      setErrorMessage(err.message);\n    }\n  };\n  const fetchData = async url => {\n    const response = await fetch(url, {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Fetching data failed\");\n    }\n    return response.json();\n  };\n  const formatDate = date => {\n    return date.toISOString().split(\"T\")[0];\n  };\n  const handlePreviousDay = () => {\n    updateSelectedDate(-1);\n  };\n  const handleNextDay = () => {\n    if (!isToday(selectedDate)) {\n      updateSelectedDate(1);\n    }\n  };\n  const updateSelectedDate = days => {\n    setSelectedDate(prevDate => {\n      const newDate = new Date(prevDate);\n      newDate.setDate(prevDate.getDate() + days);\n      return newDate;\n    });\n  };\n  const isToday = date => {\n    return date.toDateString() === new Date().toDateString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-meals-container\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(DateNavigation, {\n      selectedDate: selectedDate,\n      onPreviousDay: handlePreviousDay,\n      onNextDay: handleNextDay,\n      isToday: isToday(selectedDate)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MealTable, {\n      meals: meals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(AllMealsPage, \"RqMBmpIc5Jegu3gFXzVd7Ncm7UA=\");\n_c = AllMealsPage;\nconst MealTable = ({\n  meals\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"table-wrapper\",\n  children: /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"meals-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Meal Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Meal of the Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Calories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: meals.map(meal => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: meal.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: MealOfTheDayLabel(meal.mealOfTheDay)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: meal.calories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, meal.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 113,\n  columnNumber: 3\n}, this);\n_c2 = MealTable;\nconst MealOfTheDayLabel = mealOfTheDay => {\n  const mealLabels = {\n    0: \"Breakfast\",\n    1: \"Lunch\",\n    2: \"Dinner\",\n    3: \"Snack\"\n  };\n  return mealLabels[mealOfTheDay] || \"Unknown\";\n};\n_c3 = MealOfTheDayLabel;\nexport default AllMealsPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AllMealsPage\");\n$RefreshReg$(_c2, \"MealTable\");\n$RefreshReg$(_c3, \"MealOfTheDayLabel\");","map":{"version":3,"names":["React","useEffect","useState","DateNavigation","jsxDEV","_jsxDEV","AllMealsPage","setFetchMealsFn","_s","meals","setMeals","calories","setCalories","errorMessage","setErrorMessage","selectedDate","setSelectedDate","Date","fetchMeals","fetchCalories","data","fetchData","formatDate","err","message","url","response","fetch","method","credentials","headers","ok","Error","json","date","toISOString","split","handlePreviousDay","updateSelectedDate","handleNextDay","isToday","days","prevDate","newDate","setDate","getDate","toDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onPreviousDay","onNextDay","MealTable","_c","map","meal","name","MealOfTheDayLabel","mealOfTheDay","id","_c2","mealLabels","_c3","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/Tables/AllMealsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport DateNavigation from \"../DateNavigation\";\r\nimport \"../../css/AllMealsPage.css\";\r\n\r\nconst AllMealsPage = ({ setFetchMealsFn }) => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [calories, setCalories] = useState(0);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    fetchMeals();\r\n    fetchCalories();\r\n  }, [selectedDate]);\r\n\r\n  useEffect(() => {\r\n    if (setFetchMealsFn) {\r\n      setFetchMealsFn(() => fetchMeals);\r\n    }\r\n\r\n    return () => {\r\n      if (setFetchMealsFn) {\r\n        setFetchMealsFn(null);\r\n      }\r\n    };\r\n  }, [setFetchMealsFn]);\r\n\r\n  const fetchMeals = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        `https://localhost:7009/api/meal/all?date=${formatDate(selectedDate)}`\r\n      );\r\n      setMeals(data);\r\n      setErrorMessage(\"\");\r\n    } catch (err) {\r\n      setErrorMessage(err.message);\r\n    }\r\n  };\r\n\r\n  const fetchCalories = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        `https://localhost:7009/api/meal/calories?date=${formatDate(\r\n          selectedDate\r\n        )}`\r\n      );\r\n      setCalories(data);\r\n      setErrorMessage(\"\");\r\n    } catch (err) {\r\n      setErrorMessage(err.message);\r\n    }\r\n  };\r\n\r\n  const fetchData = async (url) => {\r\n    const response = await fetch(url, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Fetching data failed\");\r\n    }\r\n\r\n    return response.json();\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    return date.toISOString().split(\"T\")[0];\r\n  };\r\n\r\n  const handlePreviousDay = () => {\r\n    updateSelectedDate(-1);\r\n  };\r\n\r\n  const handleNextDay = () => {\r\n    if (!isToday(selectedDate)) {\r\n      updateSelectedDate(1);\r\n    }\r\n  };\r\n\r\n  const updateSelectedDate = (days) => {\r\n    setSelectedDate((prevDate) => {\r\n      const newDate = new Date(prevDate);\r\n      newDate.setDate(prevDate.getDate() + days);\r\n      return newDate;\r\n    });\r\n  };\r\n\r\n  const isToday = (date) => {\r\n    return date.toDateString() === new Date().toDateString();\r\n  };\r\n\r\n  return (\r\n    <div className=\"all-meals-container\">\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n      <DateNavigation\r\n        selectedDate={selectedDate}\r\n        onPreviousDay={handlePreviousDay}\r\n        onNextDay={handleNextDay}\r\n        isToday={isToday(selectedDate)}\r\n      />\r\n\r\n      <MealTable meals={meals} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MealTable = ({ meals }) => (\r\n  <div className=\"table-wrapper\">\r\n    <table className=\"meals-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Meal Name</th>\r\n          <th>Meal of the Day</th>\r\n          <th>Calories</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {meals.map((meal) => (\r\n          <tr key={meal.id}>\r\n            <td>{meal.name}</td>\r\n            <td>{MealOfTheDayLabel(meal.mealOfTheDay)}</td>\r\n            <td>{meal.calories}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n\r\nconst MealOfTheDayLabel = (mealOfTheDay) => {\r\n  const mealLabels = {\r\n    0: \"Breakfast\",\r\n    1: \"Lunch\",\r\n    2: \"Dinner\",\r\n    3: \"Snack\",\r\n  };\r\n  return mealLabels[mealOfTheDay] || \"Unknown\";\r\n};\r\n\r\nexport default AllMealsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAIe,IAAI,CAAC,CAAC,CAAC;EAE5DhB,SAAS,CAAC,MAAM;IACdiB,UAAU,CAAC,CAAC;IACZC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElBd,SAAS,CAAC,MAAM;IACd,IAAIM,eAAe,EAAE;MACnBA,eAAe,CAAC,MAAMW,UAAU,CAAC;IACnC;IAEA,OAAO,MAAM;MACX,IAAIX,eAAe,EAAE;QACnBA,eAAe,CAAC,IAAI,CAAC;MACvB;IACF,CAAC;EACH,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAME,IAAI,GAAG,MAAMC,SAAS,CAC1B,4CAA4CC,UAAU,CAACP,YAAY,CAAC,EACtE,CAAC;MACDL,QAAQ,CAACU,IAAI,CAAC;MACdN,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZT,eAAe,CAACS,GAAG,CAACC,OAAO,CAAC;IAC9B;EACF,CAAC;EAED,MAAML,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMC,SAAS,CAC1B,iDAAiDC,UAAU,CACzDP,YACF,CAAC,EACH,CAAC;MACDH,WAAW,CAACQ,IAAI,CAAC;MACjBN,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZT,eAAe,CAACS,GAAG,CAACC,OAAO,CAAC;IAC9B;EACF,CAAC;EAED,MAAMH,SAAS,GAAG,MAAOI,GAAG,IAAK;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;MAChCG,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACzC;IAEA,OAAON,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMX,UAAU,GAAIY,IAAI,IAAK;IAC3B,OAAOA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BC,kBAAkB,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACC,OAAO,CAACzB,YAAY,CAAC,EAAE;MAC1BuB,kBAAkB,CAAC,CAAC,CAAC;IACvB;EACF,CAAC;EAED,MAAMA,kBAAkB,GAAIG,IAAI,IAAK;IACnCzB,eAAe,CAAE0B,QAAQ,IAAK;MAC5B,MAAMC,OAAO,GAAG,IAAI1B,IAAI,CAACyB,QAAQ,CAAC;MAClCC,OAAO,CAACC,OAAO,CAACF,QAAQ,CAACG,OAAO,CAAC,CAAC,GAAGJ,IAAI,CAAC;MAC1C,OAAOE,OAAO;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMH,OAAO,GAAIN,IAAI,IAAK;IACxB,OAAOA,IAAI,CAACY,YAAY,CAAC,CAAC,KAAK,IAAI7B,IAAI,CAAC,CAAC,CAAC6B,YAAY,CAAC,CAAC;EAC1D,CAAC;EAED,oBACEzC,OAAA;IAAK0C,SAAS,EAAC,qBAAqB;IAAAC,QAAA,GACjCnC,YAAY,iBAAIR,OAAA;MAAG0C,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEnC;IAAY;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhE/C,OAAA,CAACF,cAAc;MACbY,YAAY,EAAEA,YAAa;MAC3BsC,aAAa,EAAEhB,iBAAkB;MACjCiB,SAAS,EAAEf,aAAc;MACzBC,OAAO,EAAEA,OAAO,CAACzB,YAAY;IAAE;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eAEF/C,OAAA,CAACkD,SAAS;MAAC9C,KAAK,EAAEA;IAAM;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV,CAAC;AAAC5C,EAAA,CAzGIF,YAAY;AAAAkD,EAAA,GAAZlD,YAAY;AA2GlB,MAAMiD,SAAS,GAAGA,CAAC;EAAE9C;AAAM,CAAC,kBAC1BJ,OAAA;EAAK0C,SAAS,EAAC,eAAe;EAAAC,QAAA,eAC5B3C,OAAA;IAAO0C,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC5B3C,OAAA;MAAA2C,QAAA,eACE3C,OAAA;QAAA2C,QAAA,gBACE3C,OAAA;UAAA2C,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClB/C,OAAA;UAAA2C,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxB/C,OAAA;UAAA2C,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACR/C,OAAA;MAAA2C,QAAA,EACGvC,KAAK,CAACgD,GAAG,CAAEC,IAAI,iBACdrD,OAAA;QAAA2C,QAAA,gBACE3C,OAAA;UAAA2C,QAAA,EAAKU,IAAI,CAACC;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpB/C,OAAA;UAAA2C,QAAA,EAAKY,iBAAiB,CAACF,IAAI,CAACG,YAAY;QAAC;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/C/C,OAAA;UAAA2C,QAAA,EAAKU,IAAI,CAAC/C;QAAQ;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAHjBM,IAAI,CAACI,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACL,CACN;AAACW,GAAA,GArBIR,SAAS;AAuBf,MAAMK,iBAAiB,GAAIC,YAAY,IAAK;EAC1C,MAAMG,UAAU,GAAG;IACjB,CAAC,EAAE,WAAW;IACd,CAAC,EAAE,OAAO;IACV,CAAC,EAAE,QAAQ;IACX,CAAC,EAAE;EACL,CAAC;EACD,OAAOA,UAAU,CAACH,YAAY,CAAC,IAAI,SAAS;AAC9C,CAAC;AAACI,GAAA,GARIL,iBAAiB;AAUvB,eAAetD,YAAY;AAAC,IAAAkD,EAAA,EAAAO,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}