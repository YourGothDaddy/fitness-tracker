{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\Forms\\\\AddActivityCategoryForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport CustomForm from \"../CustomForm.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddActivityCategoryForm = () => {\n  _s();\n  const [activityCategory, setActivityCategory] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrorMessage(\"\");\n    setSuccessMessage(\"\");\n    try {\n      const response = await fetch(\"https://localhost:7009/api/admin/add-activity-category\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(activityCategory)\n      });\n    } catch (err) {\n      setErrorMessage(err.message);\n    } finally {\n      setIsLoading(false);\n      resetForm();\n    }\n  };\n  const handleChange = e => {\n    setActivityCategory(e.target.value);\n  };\n  const resetForm = () => {\n    setActivityCategory(\"\");\n  };\n  const formOptions = [{\n    title: \"Activity Category Name\",\n    type: \"text\",\n    value: activityCategory,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    isRequired: true,\n    placeholder: \"Enter activity group name\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      className: \"mt-3\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      className: \"mt-3\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CustomForm, {\n      handleSubmit: handleSubmit,\n      formOptions: formOptions,\n      isLoading: isLoading,\n      buttonText: \"Add activity category\",\n      successMessage: successMessage,\n      errorMessage: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AddActivityCategoryForm, \"5hmTGmwmSzZL4CB60HWFuzLhrJk=\");\n_c = AddActivityCategoryForm;\nexport default AddActivityCategoryForm;\nvar _c;\n$RefreshReg$(_c, \"AddActivityCategoryForm\");","map":{"version":3,"names":["React","useState","Alert","CustomForm","jsxDEV","_jsxDEV","Fragment","_Fragment","AddActivityCategoryForm","_s","activityCategory","setActivityCategory","errorMessage","setErrorMessage","successMessage","setSuccessMessage","isLoading","setIsLoading","handleSubmit","e","preventDefault","response","fetch","method","credentials","headers","body","JSON","stringify","err","message","resetForm","handleChange","target","value","formOptions","title","type","isRequired","placeholder","children","variant","className","fileName","_jsxFileName","lineNumber","columnNumber","buttonText","_c","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/Forms/AddActivityCategoryForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport CustomForm from \"../CustomForm.js\";\r\n\r\nconst AddActivityCategoryForm = () => {\r\n  const [activityCategory, setActivityCategory] = useState(\"\");\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setErrorMessage(\"\");\r\n    setSuccessMessage(\"\");\r\n    try {\r\n      const response = await fetch(\r\n        \"https://localhost:7009/api/admin/add-activity-category\",\r\n        {\r\n          method: \"POST\",\r\n          credentials: \"include\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(activityCategory),\r\n        }\r\n      );\r\n    } catch (err) {\r\n      setErrorMessage(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setActivityCategory(e.target.value);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setActivityCategory(\"\");\r\n  };\r\n\r\n  const formOptions = [\r\n    {\r\n      title: \"Activity Category Name\",\r\n      type: \"text\",\r\n      value: activityCategory,\r\n      handleChange: handleChange,\r\n      handleSubmit: handleSubmit,\r\n      isRequired: true,\r\n      placeholder: \"Enter activity group name\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {errorMessage && (\r\n        <Alert variant=\"danger\" className=\"mt-3\">\r\n          {errorMessage}\r\n        </Alert>\r\n      )}\r\n      {successMessage && (\r\n        <Alert variant=\"success\" className=\"mt-3\">\r\n          {successMessage}\r\n        </Alert>\r\n      )}\r\n      <CustomForm\r\n        handleSubmit={handleSubmit}\r\n        formOptions={formOptions}\r\n        isLoading={isLoading}\r\n        buttonText=\"Add activity category\"\r\n        successMessage={successMessage}\r\n        errorMessage={errorMessage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddActivityCategoryForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}