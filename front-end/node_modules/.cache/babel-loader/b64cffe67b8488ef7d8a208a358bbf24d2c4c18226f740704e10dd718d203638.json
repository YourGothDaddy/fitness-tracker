{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\Pages\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport InfoCard from \"../Cards/InfoCard.js\";\nimport AddMealForm from \"../Forms/AddMealForm.js\";\nimport AllMealsPage from \"../Tables/AllMealsTable.js\";\nimport InfoCardPieChart from \"../Cards/InfoCardPieChart.js\";\nimport \"../../css/DashboardPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const [userDataAndGoals, setUserDataAndGoals] = useState({\n    dailyCalories: 0,\n    monthlyCalories: 0,\n    currentWeight: 0,\n    goalWeight: 0,\n    height: 0,\n    isDailyCaloriesGoal: true\n  });\n  const [calories, setCalories] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [fetchMealsFn, setFetchMealsFn] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [refreshMeals, setRefreshMeals] = useState(false);\n  const fetchData = useCallback(async url => {\n    const response = await fetch(url, {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Fetching data failed\");\n    }\n    return response.json();\n  }, []);\n  const fetchUserDataAndGoals = useCallback(async () => {\n    try {\n      const data = await fetchData(`https://localhost:7009/api/user/goals`);\n      setUserDataAndGoals({\n        dailyCalories: data.dailyCaloriesGoal || 0,\n        monthlyCalories: data.monthlyCaloriesGoal || 0,\n        currentWeight: data.weight || 0,\n        goalWeight: data.goalWeight || 0,\n        height: data.height || 0,\n        isDailyCaloriesGoal: data.isDailyCaloriesGoal\n      });\n      setErrorMessage(\"\");\n    } catch (err) {\n      setErrorMessage(err.message);\n    }\n  }, [fetchData]);\n  const fetchCalories = useCallback(async () => {\n    try {\n      const data = await fetchData(`https://localhost:7009/api/meal/calories?date=${formatDate(selectedDate)}`);\n      setCalories(data);\n      setErrorMessage(\"\");\n    } catch (err) {\n      setErrorMessage(err.message);\n    }\n  }, [fetchData, selectedDate]);\n  useEffect(() => {\n    fetchUserDataAndGoals();\n    fetchCalories();\n  }, [fetchUserDataAndGoals, fetchCalories]);\n  const handleAddMeal = useCallback(() => {\n    fetchCalories();\n    setRefreshMeals(prev => !prev); // Toggle this state to trigger a re-fetch in AllMealsPage\n    setShowForm(false);\n  }, [fetchCalories]);\n  const formatDate = date => {\n    return date.toISOString().split(\"T\")[0];\n  };\n  const {\n    dailyCalories,\n    currentWeight,\n    goalWeight\n  } = userDataAndGoals;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-page\",\n      children: [showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        onClick: () => setShowForm(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          onClick: e => e.stopPropagation(),\n          children: /*#__PURE__*/_jsxDEV(AddMealForm, {\n            onAddMeal: handleAddMeal,\n            selectedDate: selectedDate,\n            setShowForm: setShowForm // Add this prop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upper-section\",\n        children: /*#__PURE__*/_jsxDEV(AllMealsPage, {\n          setFetchMealsFn: setFetchMealsFn,\n          setSelectedDateToDashboard: setSelectedDate,\n          setShowForm: setShowForm,\n          refreshMeals: refreshMeals // Add this prop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-section\",\n          children: [/*#__PURE__*/_jsxDEV(InfoCardPieChart, {\n            current: calories,\n            goal: dailyCalories,\n            unit: \"kcal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(InfoCardPieChart, {\n            current: calories,\n            goal: dailyCalories,\n            unit: \"kcal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoCardPieChart, {\n            current: calories,\n            goal: dailyCalories,\n            unit: \"kcal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-section\",\n          children: [/*#__PURE__*/_jsxDEV(InfoCard, {\n            current: currentWeight,\n            goal: goalWeight,\n            unit: \"kg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoCard, {\n            current: currentWeight,\n            goal: goalWeight,\n            unit: \"kg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"L1aEn8nIxSnZTzxTaBRjB5Lh9m4=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","InfoCard","AddMealForm","AllMealsPage","InfoCardPieChart","jsxDEV","_jsxDEV","DashboardPage","_s","userDataAndGoals","setUserDataAndGoals","dailyCalories","monthlyCalories","currentWeight","goalWeight","height","isDailyCaloriesGoal","calories","setCalories","errorMessage","setErrorMessage","showForm","setShowForm","fetchMealsFn","setFetchMealsFn","selectedDate","setSelectedDate","Date","refreshMeals","setRefreshMeals","fetchData","url","response","fetch","method","credentials","headers","ok","Error","json","fetchUserDataAndGoals","data","dailyCaloriesGoal","monthlyCaloriesGoal","weight","err","message","fetchCalories","formatDate","handleAddMeal","prev","date","toISOString","split","className","children","onClick","e","stopPropagation","onAddMeal","fileName","_jsxFileName","lineNumber","columnNumber","setSelectedDateToDashboard","current","goal","unit","_c","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/Pages/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport InfoCard from \"../Cards/InfoCard.js\";\r\nimport AddMealForm from \"../Forms/AddMealForm.js\";\r\nimport AllMealsPage from \"../Tables/AllMealsTable.js\";\r\nimport InfoCardPieChart from \"../Cards/InfoCardPieChart.js\";\r\nimport \"../../css/DashboardPage.css\";\r\n\r\nconst DashboardPage = () => {\r\n  const [userDataAndGoals, setUserDataAndGoals] = useState({\r\n    dailyCalories: 0,\r\n    monthlyCalories: 0,\r\n    currentWeight: 0,\r\n    goalWeight: 0,\r\n    height: 0,\r\n    isDailyCaloriesGoal: true,\r\n  });\r\n  const [calories, setCalories] = useState(0);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [fetchMealsFn, setFetchMealsFn] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [refreshMeals, setRefreshMeals] = useState(false);\r\n\r\n  const fetchData = useCallback(async (url) => {\r\n    const response = await fetch(url, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Fetching data failed\");\r\n    }\r\n\r\n    return response.json();\r\n  }, []);\r\n\r\n  const fetchUserDataAndGoals = useCallback(async () => {\r\n    try {\r\n      const data = await fetchData(`https://localhost:7009/api/user/goals`);\r\n      setUserDataAndGoals({\r\n        dailyCalories: data.dailyCaloriesGoal || 0,\r\n        monthlyCalories: data.monthlyCaloriesGoal || 0,\r\n        currentWeight: data.weight || 0,\r\n        goalWeight: data.goalWeight || 0,\r\n        height: data.height || 0,\r\n        isDailyCaloriesGoal: data.isDailyCaloriesGoal,\r\n      });\r\n      setErrorMessage(\"\");\r\n    } catch (err) {\r\n      setErrorMessage(err.message);\r\n    }\r\n  }, [fetchData]);\r\n\r\n  const fetchCalories = useCallback(async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        `https://localhost:7009/api/meal/calories?date=${formatDate(\r\n          selectedDate\r\n        )}`\r\n      );\r\n      setCalories(data);\r\n      setErrorMessage(\"\");\r\n    } catch (err) {\r\n      setErrorMessage(err.message);\r\n    }\r\n  }, [fetchData, selectedDate]);\r\n\r\n  useEffect(() => {\r\n    fetchUserDataAndGoals();\r\n    fetchCalories();\r\n  }, [fetchUserDataAndGoals, fetchCalories]);\r\n\r\n  const handleAddMeal = useCallback(() => {\r\n    fetchCalories();\r\n    setRefreshMeals((prev) => !prev); // Toggle this state to trigger a re-fetch in AllMealsPage\r\n    setShowForm(false);\r\n  }, [fetchCalories]);\r\n\r\n  const formatDate = (date) => {\r\n    return date.toISOString().split(\"T\")[0];\r\n  };\r\n\r\n  const { dailyCalories, currentWeight, goalWeight } = userDataAndGoals;\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"dashboard-page\">\r\n        {showForm && (\r\n          <div className=\"modal-overlay\" onClick={() => setShowForm(false)}>\r\n            <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n              <AddMealForm\r\n                onAddMeal={handleAddMeal}\r\n                selectedDate={selectedDate}\r\n                setShowForm={setShowForm} // Add this prop\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"upper-section\">\r\n          <AllMealsPage\r\n            setFetchMealsFn={setFetchMealsFn}\r\n            setSelectedDateToDashboard={setSelectedDate}\r\n            setShowForm={setShowForm}\r\n            refreshMeals={refreshMeals} // Add this prop\r\n          />\r\n        </div>\r\n        {errorMessage && <h1>{errorMessage}</h1>}\r\n        <div className=\"main-section\">\r\n          <div className=\"left-section\">\r\n            <InfoCardPieChart\r\n              current={calories}\r\n              goal={dailyCalories}\r\n              unit=\"kcal\"\r\n            />{\" \"}\r\n            <InfoCardPieChart\r\n              current={calories}\r\n              goal={dailyCalories}\r\n              unit=\"kcal\"\r\n            />\r\n            <InfoCardPieChart\r\n              current={calories}\r\n              goal={dailyCalories}\r\n              unit=\"kcal\"\r\n            />\r\n          </div>\r\n          <div className=\"right-section\">\r\n            <InfoCard current={currentWeight} goal={goalWeight} unit=\"kg\" />\r\n            <InfoCard current={currentWeight} goal={goalWeight} unit=\"kg\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}