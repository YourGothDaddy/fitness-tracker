{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\Forms\\\\AddConsumableForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../css/AddConsumableForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddConsumableForm = () => {\n  _s();\n  const [itemName, setItemName] = useState(\"\");\n  const [calories, setCalories] = useState(0);\n  const [protein, setProtein] = useState(0.0);\n  const [carbohydrates, setCarbohydrates] = useState(0.0);\n  const [fat, setFat] = useState(0.0);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [nutritionalInfo, setNutritionalInfo] = useState({\n    Carbohydrates: {\n      Fibers: 0.0,\n      Starch: 0.0,\n      Sugars: 0.0,\n      galactose: 0.0,\n      Glucose: 0.0,\n      Sucrose: 0.0,\n      lactose: 0.0,\n      Maltose: 0.0,\n      Fructose: 0.0\n    },\n    Vitamins: {\n      Betaine: 0.0,\n      \"Vitamin A\": 0.0,\n      \"Vitamin B1 (thiamine)\": 0.0,\n      \"Vitamin B2 (riboflavin)\": 0.0,\n      \"Vitamin B3 (niacin)\": 0.0,\n      \"Vitamin B4 (choline)\": 0.0,\n      \"Vitamin B5 (Pantothenic Acid)\": 0.0,\n      \"Vitamin B6 (Pyridoxine)\": 0.0,\n      \"Vitamin B9 (Folic Acid)\": 0.0,\n      \"Vitamin B12 (Cobalcamine)\": 0.0,\n      \"Vitamin C\": 0.0,\n      \"Vitamin D\": 0.0,\n      \"Vitamin E\": 0.0,\n      \"Vitamin K1\": 0.0,\n      \"Vitamin K2 (MK04)\": 0.0\n    },\n    AminoAcids: {\n      Alanine: 0.0,\n      Arginine: 0.0,\n      \"Aspartic acid\": 0.0,\n      Valin: 0.0,\n      Glycine: 0.0,\n      Glutamine: 0.0,\n      Isoleucine: 0.0,\n      Leucine: 0.0,\n      Lysine: 0.0,\n      Methionine: 0.0,\n      Proline: 0.0,\n      Serine: 0.0,\n      Tyrosine: 0.0,\n      Threonine: 0.0,\n      tryptophan: 0.0,\n      Phenylalanine: 0.0,\n      Hydroxyproline: 0.0,\n      histidine: 0.0,\n      Cystine: 0.0\n    },\n    Fats: {\n      \"Monounsaturated fats\": 0.0,\n      \"Polyunsaturated fats\": 0.0,\n      \"Saturated fat\": 0.0,\n      \"Trans fats\": 0.0\n    },\n    Minerals: {\n      Iron: 0.0,\n      Potassium: 0.0,\n      Calcium: 0.0,\n      Magnesium: 0.0,\n      Manganese: 0.0,\n      Med: 0.0,\n      Sodium: 0.0,\n      Selenium: 0.0,\n      Fluoride: 0.0,\n      Phosphorus: 0.0,\n      Zinc: 0.0\n    },\n    Sterols: {\n      Cholesterol: 0.0,\n      Phytosterols: 0.0,\n      Stigmasteroli: 0.0,\n      Campesteroli: 0.0,\n      \"Beta-sitosterols\": 0.0\n    },\n    More: {\n      Alcohol: 0.0,\n      Water: 0.0,\n      Caffeine: 0.0,\n      Theobromine: 0.0,\n      Ashes: 0.0\n    }\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const consumableItem = {\n      Name: 'itemName',\n      CaloriesPer100g: 100,\n      ProteinPer100g: 150,\n      CarbohydratePer100g: 150,\n      FatPer100g: 150,\n      NutritionalInformation: nutritionalInfo\n    };\n    try {\n      const response = await fetch('https://localhost:7009/api/admin/add-consumable-item', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(consumableItem)\n      });\n      if (!response.ok) {\n        throw new Error('Adding a consumable item failed');\n      }\n      setSuccessMessage('Consumable item added successfully!');\n    } catch (err) {\n      setErrorMessage(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const renderNutritionalSection = (sectionName, sectionData, title) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `collapsible-card ${sections[sectionName] ? 'expanded' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapsible-header\",\n      onClick: () => toggleSection(sectionName),\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), sections[sectionName] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapsible-content grid-container\",\n      children: Object.entries(sectionData).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group grid-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: key.charAt(0).toUpperCase() + key.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          name: key,\n          value: value,\n          onChange: e => handleNutritionalChange(sectionName, key, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-consumable-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Consumable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"type\",\n          value: formData.type,\n          onChange: handleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Food\",\n            children: \"Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Drink\",\n            children: \"Drink\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Calories per 100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"caloriesPer100g\",\n          value: formData.caloriesPer100g,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Protein per 100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          name: \"proteinPer100g\",\n          value: formData.proteinPer100g,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Carbohydrate per 100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          name: \"carbohydratePer100g\",\n          value: formData.carbohydratePer100g,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Fat per 100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          name: \"fatPer100g\",\n          value: formData.fatPer100g,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), renderNutritionalSection('carbohydrates', nutritionalInfo.carbohydrates, 'Carbohydrate Information'), renderNutritionalSection('vitamins', nutritionalInfo.vitamins, 'Vitamin Information'), renderNutritionalSection('aminoAcids', nutritionalInfo.aminoAcids, 'Amino Acid Information'), renderNutritionalSection('fats', nutritionalInfo.fats, 'Fat Information'), renderNutritionalSection('minerals', nutritionalInfo.minerals, 'Mineral Information'), renderNutritionalSection('moreInfo', nutritionalInfo.moreInfo, 'More Information'), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Add Consumable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n_s(AddConsumableForm, \"Vx9ZtyjPXCUTtcGvD9Cu1w+ADd0=\");\n_c = AddConsumableForm;\nexport default AddConsumableForm;\nvar _c;\n$RefreshReg$(_c, \"AddConsumableForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddConsumableForm","_s","itemName","setItemName","calories","setCalories","protein","setProtein","carbohydrates","setCarbohydrates","fat","setFat","errorMessage","setErrorMessage","successMessage","setSuccessMessage","nutritionalInfo","setNutritionalInfo","Carbohydrates","Fibers","Starch","Sugars","galactose","Glucose","Sucrose","lactose","Maltose","Fructose","Vitamins","Betaine","AminoAcids","Alanine","Arginine","Valin","Glycine","Glutamine","Isoleucine","Leucine","Lysine","Methionine","Proline","Serine","Tyrosine","Threonine","tryptophan","Phenylalanine","Hydroxyproline","histidine","Cystine","Fats","Minerals","Iron","Potassium","Calcium","Magnesium","Manganese","Med","Sodium","Selenium","Fluoride","Phosphorus","Zinc","Sterols","Cholesterol","Phytosterols","Stigmasteroli","Campesteroli","More","Alcohol","Water","Caffeine","Theobromine","Ashes","handleSubmit","e","preventDefault","consumableItem","Name","CaloriesPer100g","ProteinPer100g","CarbohydratePer100g","FatPer100g","NutritionalInformation","response","fetch","method","credentials","headers","body","JSON","stringify","ok","Error","err","message","setIsLoading","renderNutritionalSection","sectionName","sectionData","title","className","sections","children","onClick","toggleSection","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","key","value","charAt","toUpperCase","slice","type","step","name","onChange","handleNutritionalChange","target","onSubmit","formData","handleChange","required","caloriesPer100g","proteinPer100g","carbohydratePer100g","fatPer100g","vitamins","aminoAcids","fats","minerals","moreInfo","_c","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/Forms/AddConsumableForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../../css/AddConsumableForm.css';\r\n\r\nconst AddConsumableForm = () => {\r\n    const [itemName, setItemName] = useState(\"\");\r\n    const [calories, setCalories] = useState(0);\r\n    const [protein, setProtein] = useState(0.0);\r\n    const [carbohydrates, setCarbohydrates] = useState(0.0);\r\n    const [fat, setFat] = useState(0.0);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n  \r\n    const [nutritionalInfo, setNutritionalInfo] = useState({\r\n      Carbohydrates: {\r\n        Fibers: 0.0,\r\n        Starch: 0.0,\r\n        Sugars: 0.0,\r\n        galactose: 0.0,\r\n        Glucose: 0.0,\r\n        Sucrose: 0.0,\r\n        lactose: 0.0,\r\n        Maltose: 0.0,\r\n        Fructose: 0.0,\r\n      },\r\n      Vitamins: {\r\n        Betaine: 0.0,\r\n        \"Vitamin A\": 0.0,\r\n        \"Vitamin B1 (thiamine)\": 0.0,\r\n        \"Vitamin B2 (riboflavin)\": 0.0,\r\n        \"Vitamin B3 (niacin)\": 0.0,\r\n        \"Vitamin B4 (choline)\": 0.0,\r\n        \"Vitamin B5 (Pantothenic Acid)\": 0.0,\r\n        \"Vitamin B6 (Pyridoxine)\": 0.0,\r\n        \"Vitamin B9 (Folic Acid)\": 0.0,\r\n        \"Vitamin B12 (Cobalcamine)\": 0.0,\r\n        \"Vitamin C\": 0.0,\r\n        \"Vitamin D\": 0.0,\r\n        \"Vitamin E\": 0.0,\r\n        \"Vitamin K1\": 0.0,\r\n        \"Vitamin K2 (MK04)\": 0.0,\r\n      },\r\n      AminoAcids: {\r\n        Alanine: 0.0,\r\n        Arginine: 0.0,\r\n        \"Aspartic acid\": 0.0,\r\n        Valin: 0.0,\r\n        Glycine: 0.0,\r\n        Glutamine: 0.0,\r\n        Isoleucine: 0.0,\r\n        Leucine: 0.0,\r\n        Lysine: 0.0,\r\n        Methionine: 0.0,\r\n        Proline: 0.0,\r\n        Serine: 0.0,\r\n        Tyrosine: 0.0,\r\n        Threonine: 0.0,\r\n        tryptophan: 0.0,\r\n        Phenylalanine: 0.0,\r\n        Hydroxyproline: 0.0,\r\n        histidine: 0.0,\r\n        Cystine: 0.0,\r\n      },\r\n      Fats: {\r\n        \"Monounsaturated fats\": 0.0,\r\n        \"Polyunsaturated fats\": 0.0,\r\n        \"Saturated fat\": 0.0,\r\n        \"Trans fats\": 0.0,\r\n      },\r\n      Minerals: {\r\n        Iron: 0.0,\r\n        Potassium: 0.0,\r\n        Calcium: 0.0,\r\n        Magnesium: 0.0,\r\n        Manganese: 0.0,\r\n        Med: 0.0,\r\n        Sodium: 0.0,\r\n        Selenium: 0.0,\r\n        Fluoride: 0.0,\r\n        Phosphorus: 0.0,\r\n        Zinc: 0.0,\r\n      },\r\n      Sterols: {\r\n        Cholesterol: 0.0,\r\n        Phytosterols: 0.0,\r\n        Stigmasteroli: 0.0,\r\n        Campesteroli: 0.0,\r\n        \"Beta-sitosterols\": 0.0,\r\n      },\r\n      More: {\r\n        Alcohol: 0.0,\r\n        Water: 0.0,\r\n        Caffeine: 0.0,\r\n        Theobromine: 0.0,\r\n        Ashes: 0.0,\r\n      },\r\n    });\r\n  \r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n  \r\n      const consumableItem = {\r\n        Name: 'itemName',\r\n        CaloriesPer100g: 100,\r\n        ProteinPer100g: 150,\r\n        CarbohydratePer100g: 150,\r\n        FatPer100g: 150,\r\n        NutritionalInformation: nutritionalInfo,\r\n      };\r\n  \r\n\r\n        try {\r\n            const response = await fetch('https://localhost:7009/api/admin/add-consumable-item', {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(consumableItem),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Adding a consumable item failed');\r\n            }\r\n\r\n            setSuccessMessage('Consumable item added successfully!');\r\n        } catch (err) {\r\n            setErrorMessage(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const renderNutritionalSection = (sectionName, sectionData, title) => (\r\n        <div className={`collapsible-card ${sections[sectionName] ? 'expanded' : ''}`}>\r\n            <div className=\"collapsible-header\" onClick={() => toggleSection(sectionName)}>\r\n                <h3>{title}</h3>\r\n            </div>\r\n            {sections[sectionName] && (\r\n                <div className=\"collapsible-content grid-container\">\r\n                    {Object.entries(sectionData).map(([key, value]) => (\r\n                        <div className=\"form-group grid-item\" key={key}>\r\n                            <label>{key.charAt(0).toUpperCase() + key.slice(1)}</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                step=\"0.01\"\r\n                                name={key}\r\n                                value={value}\r\n                                onChange={(e) => handleNutritionalChange(sectionName, key, e.target.value)}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"add-consumable-form\">\r\n            <h2>Add New Consumable</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Name:</label>\r\n                    <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} required />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Type:</label>\r\n                    <select name=\"type\" value={formData.type} onChange={handleChange} required>\r\n                        <option value=\"\">Select Type</option>\r\n                        <option value=\"Food\">Food</option>\r\n                        <option value=\"Drink\">Drink</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Calories per 100g:</label>\r\n                    <input type=\"number\" name=\"caloriesPer100g\" value={formData.caloriesPer100g} onChange={handleChange} required />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Protein per 100g:</label>\r\n                    <input type=\"number\" step=\"0.01\" name=\"proteinPer100g\" value={formData.proteinPer100g} onChange={handleChange} required />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Carbohydrate per 100g:</label>\r\n                    <input type=\"number\" step=\"0.01\" name=\"carbohydratePer100g\" value={formData.carbohydratePer100g} onChange={handleChange} required />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fat per 100g:</label>\r\n                    <input type=\"number\" step=\"0.01\" name=\"fatPer100g\" value={formData.fatPer100g} onChange={handleChange} required />\r\n                </div>\r\n\r\n                {renderNutritionalSection('carbohydrates', nutritionalInfo.carbohydrates, 'Carbohydrate Information')}\r\n                {renderNutritionalSection('vitamins', nutritionalInfo.vitamins, 'Vitamin Information')}\r\n                {renderNutritionalSection('aminoAcids', nutritionalInfo.aminoAcids, 'Amino Acid Information')}\r\n                {renderNutritionalSection('fats', nutritionalInfo.fats, 'Fat Information')}\r\n                {renderNutritionalSection('minerals', nutritionalInfo.minerals, 'Mineral Information')}\r\n                {renderNutritionalSection('moreInfo', nutritionalInfo.moreInfo, 'More Information')}\r\n\r\n                <button type=\"submit\" className=\"submit-button\">Add Consumable</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddConsumableForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}