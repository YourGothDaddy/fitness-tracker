{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport Composer from 'react-composer';\nimport { setUpdateRange } from '../helpers/deprecated.js';\nfunction isFunctionChild(value) {\n  return typeof value === 'function';\n}\nconst _instanceLocalMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _instanceWorldMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _instanceIntersects = [];\nconst _mesh = /* @__PURE__ */new THREE.Mesh();\nclass PositionMesh extends THREE.Group {\n  constructor() {\n    super();\n    this.color = new THREE.Color('white');\n    this.instance = {\n      current: undefined\n    };\n    this.instanceKey = {\n      current: undefined\n    };\n  }\n\n  // This will allow the virtual instance have bounds\n  get geometry() {\n    var _this$instance$curren;\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n  }\n\n  // And this will allow the virtual instance to receive events\n  raycast(raycaster, intersects) {\n    const parent = this.instance.current;\n    if (!parent) return;\n    if (!parent.geometry || !parent.material) return;\n    _mesh.geometry = parent.geometry;\n    const matrixWorld = parent.matrixWorld;\n    const instanceId = parent.userData.instances.indexOf(this.instanceKey);\n    // If the instance wasn't found or exceeds the parents draw range, bail out\n    if (instanceId === -1 || instanceId > parent.count) return;\n    // calculate the world matrix for each instance\n    parent.getMatrixAt(instanceId, _instanceLocalMatrix);\n    _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix);\n    // the mesh represents this single instance\n    _mesh.matrixWorld = _instanceWorldMatrix;\n    // raycast side according to instance material\n    if (parent.material instanceof THREE.Material) _mesh.material.side = parent.material.side;else _mesh.material.side = parent.material[0].side;\n    _mesh.raycast(raycaster, _instanceIntersects);\n    // process the result of raycast\n    for (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n      const intersect = _instanceIntersects[i];\n      intersect.instanceId = instanceId;\n      intersect.object = this;\n      intersects.push(intersect);\n    }\n    _instanceIntersects.length = 0;\n  }\n}\nconst globalContext = /* @__PURE__ */React.createContext(null);\nconst parentMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst instanceMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst tempMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst translation = /* @__PURE__ */new THREE.Vector3();\nconst rotation = /* @__PURE__ */new THREE.Quaternion();\nconst scale = /* @__PURE__ */new THREE.Vector3();\nconst isInstancedBufferAttribute = attr => attr.isInstancedBufferAttribute;\nconst Instance = /* @__PURE__ */React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    PositionMesh\n  }), []);\n  const group = React.useRef();\n  React.useImperativeHandle(ref, () => group.current, []);\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"positionMesh\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: group\n  }, props), children);\n});\nconst Instances = /* @__PURE__ */React.forwardRef(({\n  context,\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [{\n    localContext,\n    instance\n  }] = React.useState(() => {\n    const localContext = /*#__PURE__*/React.createContext(null);\n    return {\n      localContext,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: localContext\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => parentRef.current, []);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n    for (let i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let iterations = 0;\n  let count = 0;\n  const attributes = React.useRef([]);\n  React.useLayoutEffect(() => {\n    attributes.current = Object.entries(parentRef.current.geometry.attributes).filter(([name, value]) => isInstancedBufferAttribute(value));\n  });\n  useFrame(() => {\n    if (frames === Infinity || iterations < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n      count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n      parentRef.current.count = count;\n      setUpdateRange(parentRef.current.instanceMatrix, {\n        offset: 0,\n        count: count * 16\n      });\n      setUpdateRange(parentRef.current.instanceColor, {\n        offset: 0,\n        count: count * 3\n      });\n      for (let i = 0; i < instances.length; i++) {\n        const instance = instances[i].current;\n        // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n        instance.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        instanceMatrix.toArray(matrices, i * 16);\n        parentRef.current.instanceMatrix.needsUpdate = true;\n        instance.color.toArray(colors, i * 3);\n        parentRef.current.instanceColor.needsUpdate = true;\n      }\n      iterations++;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances,\n      limit,\n      frames\n    },\n    matrixAutoUpdate: false,\n    ref: parentRef,\n    args: [null, null, 0],\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), isFunctionChild(children) ? /*#__PURE__*/React.createElement(localContext.Provider, {\n    value: api\n  }, children(instance)) : context ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\nconst Merged = /* @__PURE__ */React.forwardRef(function Merged({\n  meshes,\n  children,\n  ...props\n}, ref) {\n  const isArray = Array.isArray(meshes);\n  // Filter out meshes from collections, which may contain non-meshes\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      key: geometry.uuid,\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({\n    ...acc,\n    [key]: args[i]\n  }), {}))));\n});\n\n/** Idea and implementation for global instances and instanced attributes by\n/*  Matias Gonzalez Fernandez https://x.com/matiNotFound\n/*  and Paul Henschel https://x.com/0xca0a\n*/\nfunction createInstances() {\n  const context = /*#__PURE__*/React.createContext(null);\n  return [/*#__PURE__*/React.forwardRef((props, fref) => /*#__PURE__*/React.createElement(Instances, _extends({\n    ref: fref,\n    context: context\n  }, props))), /*#__PURE__*/React.forwardRef((props, fref) => /*#__PURE__*/React.createElement(Instance, _extends({\n    ref: fref,\n    context: context\n  }, props)))];\n}\nconst InstancedAttribute = /*#__PURE__*/React.forwardRef(({\n  name,\n  defaultValue,\n  normalized,\n  usage = THREE.DynamicDrawUsage\n}, fref) => {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    const parent = ref.current.__r3f.parent;\n    parent.geometry.attributes[name] = ref.current;\n    const value = Array.isArray(defaultValue) ? defaultValue : [defaultValue];\n    const array = Array.from({\n      length: parent.userData.limit\n    }, () => value).flat();\n    ref.current.array = new Float32Array(array);\n    ref.current.itemSize = value.length;\n    ref.current.count = array.length / ref.current.itemSize;\n    return () => {\n      delete parent.geometry.attributes[name];\n    };\n  }, [name]);\n  let iterations = 0;\n  useFrame(() => {\n    const parent = ref.current.__r3f.parent;\n    if (parent.userData.frames === Infinity || iterations < parent.userData.frames) {\n      for (let i = 0; i < parent.userData.instances.length; i++) {\n        const instance = parent.userData.instances[i].current;\n        const value = instance[name];\n        if (value !== undefined) {\n          ref.current.set(Array.isArray(value) ? value : typeof value.toArray === 'function' ? value.toArray() : [value], i * ref.current.itemSize);\n          ref.current.needsUpdate = true;\n        }\n      }\n      iterations++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    ref: ref,\n    usage: usage,\n    normalized: normalized\n  });\n});\nexport { Instance, InstancedAttribute, Instances, Merged, createInstances };","map":{"version":3,"names":["_extends","THREE","React","extend","useFrame","Composer","setUpdateRange","isFunctionChild","value","_instanceLocalMatrix","Matrix4","_instanceWorldMatrix","_instanceIntersects","_mesh","Mesh","PositionMesh","Group","constructor","color","Color","instance","current","undefined","instanceKey","geometry","_this$instance$curren","raycast","raycaster","intersects","parent","material","matrixWorld","instanceId","userData","instances","indexOf","count","getMatrixAt","multiplyMatrices","Material","side","i","l","length","intersect","object","push","globalContext","createContext","parentMatrix","instanceMatrix","tempMatrix","translation","Vector3","rotation","Quaternion","scale","isInstancedBufferAttribute","attr","Instance","forwardRef","context","children","props","ref","useMemo","group","useRef","useImperativeHandle","subscribe","getParent","useContext","useLayoutEffect","createElement","Instances","range","limit","frames","Infinity","localContext","useState","parentRef","setInstances","matrices","colors","mArray","Float32Array","identity","toArray","Array","map","useEffect","needsUpdate","iterations","attributes","Object","entries","filter","name","updateMatrix","updateMatrixWorld","copy","invert","Math","min","offset","instanceColor","decompose","compose","premultiply","api","item","matrixAutoUpdate","args","attach","array","itemSize","usage","DynamicDrawUsage","Provider","Merged","meshes","isArray","key","keys","isMesh","components","values","uuid","reduce","acc","createInstances","fref","InstancedAttribute","defaultValue","normalized","__r3f","from","flat","set"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/node_modules/@react-three/drei/core/Instances.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport Composer from 'react-composer';\nimport { setUpdateRange } from '../helpers/deprecated.js';\n\nfunction isFunctionChild(value) {\n  return typeof value === 'function';\n}\nconst _instanceLocalMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _instanceWorldMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _instanceIntersects = [];\nconst _mesh = /* @__PURE__ */new THREE.Mesh();\nclass PositionMesh extends THREE.Group {\n  constructor() {\n    super();\n    this.color = new THREE.Color('white');\n    this.instance = {\n      current: undefined\n    };\n    this.instanceKey = {\n      current: undefined\n    };\n  }\n\n  // This will allow the virtual instance have bounds\n  get geometry() {\n    var _this$instance$curren;\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n  }\n\n  // And this will allow the virtual instance to receive events\n  raycast(raycaster, intersects) {\n    const parent = this.instance.current;\n    if (!parent) return;\n    if (!parent.geometry || !parent.material) return;\n    _mesh.geometry = parent.geometry;\n    const matrixWorld = parent.matrixWorld;\n    const instanceId = parent.userData.instances.indexOf(this.instanceKey);\n    // If the instance wasn't found or exceeds the parents draw range, bail out\n    if (instanceId === -1 || instanceId > parent.count) return;\n    // calculate the world matrix for each instance\n    parent.getMatrixAt(instanceId, _instanceLocalMatrix);\n    _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix);\n    // the mesh represents this single instance\n    _mesh.matrixWorld = _instanceWorldMatrix;\n    // raycast side according to instance material\n    if (parent.material instanceof THREE.Material) _mesh.material.side = parent.material.side;else _mesh.material.side = parent.material[0].side;\n    _mesh.raycast(raycaster, _instanceIntersects);\n    // process the result of raycast\n    for (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n      const intersect = _instanceIntersects[i];\n      intersect.instanceId = instanceId;\n      intersect.object = this;\n      intersects.push(intersect);\n    }\n    _instanceIntersects.length = 0;\n  }\n}\nconst globalContext = /* @__PURE__ */React.createContext(null);\nconst parentMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst instanceMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst tempMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst translation = /* @__PURE__ */new THREE.Vector3();\nconst rotation = /* @__PURE__ */new THREE.Quaternion();\nconst scale = /* @__PURE__ */new THREE.Vector3();\nconst isInstancedBufferAttribute = attr => attr.isInstancedBufferAttribute;\nconst Instance = /* @__PURE__ */React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    PositionMesh\n  }), []);\n  const group = React.useRef();\n  React.useImperativeHandle(ref, () => group.current, []);\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"positionMesh\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: group\n  }, props), children);\n});\nconst Instances = /* @__PURE__ */React.forwardRef(({\n  context,\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [{\n    localContext,\n    instance\n  }] = React.useState(() => {\n    const localContext = /*#__PURE__*/React.createContext(null);\n    return {\n      localContext,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: localContext\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => parentRef.current, []);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n    for (let i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let iterations = 0;\n  let count = 0;\n  const attributes = React.useRef([]);\n  React.useLayoutEffect(() => {\n    attributes.current = Object.entries(parentRef.current.geometry.attributes).filter(([name, value]) => isInstancedBufferAttribute(value));\n  });\n  useFrame(() => {\n    if (frames === Infinity || iterations < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n      count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n      parentRef.current.count = count;\n      setUpdateRange(parentRef.current.instanceMatrix, {\n        offset: 0,\n        count: count * 16\n      });\n      setUpdateRange(parentRef.current.instanceColor, {\n        offset: 0,\n        count: count * 3\n      });\n      for (let i = 0; i < instances.length; i++) {\n        const instance = instances[i].current;\n        // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n        instance.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        instanceMatrix.toArray(matrices, i * 16);\n        parentRef.current.instanceMatrix.needsUpdate = true;\n        instance.color.toArray(colors, i * 3);\n        parentRef.current.instanceColor.needsUpdate = true;\n      }\n      iterations++;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances,\n      limit,\n      frames\n    },\n    matrixAutoUpdate: false,\n    ref: parentRef,\n    args: [null, null, 0],\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), isFunctionChild(children) ? /*#__PURE__*/React.createElement(localContext.Provider, {\n    value: api\n  }, children(instance)) : context ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\nconst Merged = /* @__PURE__ */React.forwardRef(function Merged({\n  meshes,\n  children,\n  ...props\n}, ref) {\n  const isArray = Array.isArray(meshes);\n  // Filter out meshes from collections, which may contain non-meshes\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      key: geometry.uuid,\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({\n    ...acc,\n    [key]: args[i]\n  }), {}))));\n});\n\n/** Idea and implementation for global instances and instanced attributes by\n/*  Matias Gonzalez Fernandez https://x.com/matiNotFound\n/*  and Paul Henschel https://x.com/0xca0a\n*/\nfunction createInstances() {\n  const context = /*#__PURE__*/React.createContext(null);\n  return [/*#__PURE__*/React.forwardRef((props, fref) => /*#__PURE__*/React.createElement(Instances, _extends({\n    ref: fref,\n    context: context\n  }, props))), /*#__PURE__*/React.forwardRef((props, fref) => /*#__PURE__*/React.createElement(Instance, _extends({\n    ref: fref,\n    context: context\n  }, props)))];\n}\nconst InstancedAttribute = /*#__PURE__*/React.forwardRef(({\n  name,\n  defaultValue,\n  normalized,\n  usage = THREE.DynamicDrawUsage\n}, fref) => {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    const parent = ref.current.__r3f.parent;\n    parent.geometry.attributes[name] = ref.current;\n    const value = Array.isArray(defaultValue) ? defaultValue : [defaultValue];\n    const array = Array.from({\n      length: parent.userData.limit\n    }, () => value).flat();\n    ref.current.array = new Float32Array(array);\n    ref.current.itemSize = value.length;\n    ref.current.count = array.length / ref.current.itemSize;\n    return () => {\n      delete parent.geometry.attributes[name];\n    };\n  }, [name]);\n  let iterations = 0;\n  useFrame(() => {\n    const parent = ref.current.__r3f.parent;\n    if (parent.userData.frames === Infinity || iterations < parent.userData.frames) {\n      for (let i = 0; i < parent.userData.instances.length; i++) {\n        const instance = parent.userData.instances[i].current;\n        const value = instance[name];\n        if (value !== undefined) {\n          ref.current.set(Array.isArray(value) ? value : typeof value.toArray === 'function' ? value.toArray() : [value], i * ref.current.itemSize);\n          ref.current.needsUpdate = true;\n        }\n      }\n      iterations++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    ref: ref,\n    usage: usage,\n    normalized: normalized\n  });\n});\n\nexport { Instance, InstancedAttribute, Instances, Merged, createInstances };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}