{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\Forms\\\\AddConsumableForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../css/AddConsumableForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddConsumableForm = () => {\n  _s();\n  const [itemName, setItemName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [calories, setCalories] = useState(0);\n  const [protein, setProtein] = useState(0.0);\n  const [carbohydrates, setCarbohydrates] = useState(0.0);\n  const [fat, setFat] = useState(0.0);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Handle loading state\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Initialize state for nutritional information\n  const [nutritionalInfo, setNutritionalInfo] = useState({\n    Carbohydrates: {\n      Fibers: 0.0,\n      Starch: 0.0,\n      Sugars: 0.0,\n      galactose: 0.0,\n      Glucose: 0.0,\n      Sucrose: 0.0,\n      lactose: 0.0,\n      Maltose: 0.0,\n      Fructose: 0.0\n    },\n    Vitamins: {\n      Betaine: 0.0,\n      \"Vitamin A\": 0.0,\n      \"Vitamin B1 (thiamine)\": 0.0,\n      \"Vitamin B2 (riboflavin)\": 0.0,\n      \"Vitamin B3 (niacin)\": 0.0,\n      \"Vitamin B4 (choline)\": 0.0,\n      \"Vitamin B5 (Pantothenic Acid)\": 0.0,\n      \"Vitamin B6 (Pyridoxine)\": 0.0,\n      \"Vitamin B9 (Folic Acid)\": 0.0,\n      \"Vitamin B12 (Cobalcamine)\": 0.0,\n      \"Vitamin C\": 0.0,\n      \"Vitamin D\": 0.0,\n      \"Vitamin E\": 0.0,\n      \"Vitamin K1\": 0.0,\n      \"Vitamin K2 (MK04)\": 0.0\n    },\n    AminoAcids: {\n      Alanine: 0.0,\n      Arginine: 0.0,\n      \"Aspartic acid\": 0.0,\n      Valin: 0.0,\n      Glycine: 0.0,\n      glutamine: 0.0,\n      Isoleucine: 0.0,\n      Leucine: 0.0,\n      Lysine: 0.0,\n      Methionine: 0.0,\n      Proline: 0.0,\n      Serine: 0.0,\n      Tyrosine: 0.0,\n      Threonine: 0.0,\n      tryptophan: 0.0,\n      Phenylalanine: 0.0,\n      Hydroxyproline: 0.0,\n      histidine: 0.0,\n      Cystine: 0.0\n    },\n    Fats: {\n      \"Monounsaturated fats\": 0.0,\n      \"Polyunsaturated fats\": 0.0,\n      \"Saturated fat\": 0.0,\n      \"Trans fats\": 0.0\n    },\n    Minerals: {\n      Iron: 0.0,\n      Potassium: 0.0,\n      Calcium: 0.0,\n      Magnesium: 0.0,\n      Manganese: 0.0,\n      Med: 0.0,\n      Sodium: 0.0,\n      Selenium: 0.0,\n      Fluoride: 0.0,\n      Phosphorus: 0.0,\n      Zinc: 0.0\n    },\n    Sterols: {\n      Cholesterol: 0.0,\n      Phytosterols: 0.0,\n      Stigmasteroli: 0.0,\n      Campesteroli: 0.0,\n      \"Beta-sitosterols\": 0.0\n    },\n    More: {\n      Alcohol: 0.0,\n      Water: 0.0,\n      Caffeine: 0.0,\n      Theobromine: 0.0,\n      Ashes: 0.0\n    }\n  });\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    const consumableItem = {\n      Name: itemName,\n      CaloriesPer100g: calories,\n      ProteinPer100g: protein,\n      CarbohydratePer100g: carbohydrates,\n      FatPer100g: fat,\n      Type: type,\n      NutritionalInformation: nutritionalInfo\n    };\n    try {\n      const response = await fetch('https://localhost:7009/api/admin/add-consumable-item', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(consumableItem)\n      });\n      if (!response.ok) {\n        throw new Error('Adding a consumable item failed');\n      }\n      setSuccessMessage('Consumable item added successfully!');\n    } catch (err) {\n      setErrorMessage(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle change in form fields\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    switch (name) {\n      case 'name':\n        setItemName(value);\n        break;\n      case 'type':\n        setType(value);\n        break;\n      case 'caloriesPer100g':\n        setCalories(parseFloat(value));\n        break;\n      case 'proteinPer100g':\n        setProtein(parseFloat(value));\n        break;\n      case 'carbohydratePer100g':\n        setCarbohydrates(parseFloat(value));\n        break;\n      case 'fatPer100g':\n        setFat(parseFloat(value));\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Handle change in nutritional information\n  const handleNutritionalChange = (section, key, value) => {\n    setNutritionalInfo(prevInfo => ({\n      ...prevInfo,\n      [section]: {\n        ...prevInfo[section],\n        [key]: parseFloat(value)\n      }\n    }));\n  };\n\n  // Render form fields for different sections\n  const renderNutritionalSection = (sectionName, sectionData, title) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collapsible-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapsible-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapsible-content grid-container\",\n      children: Object.entries(sectionData).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group grid-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          name: key,\n          value: value,\n          onChange: e => handleNutritionalChange(sectionName, key, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-consumable-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Consumable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: itemName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"type\",\n          value: type,\n          onChange: handleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Food\",\n            children: \"Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Drink\",\n            children: \"Drink\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Calories per 100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"caloriesPer100g\",\n          value: calories,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Protein per 100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          name: \"proteinPer100g\",\n          value: protein,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Carbohydrate per 100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          name: \"carbohydratePer100g\",\n          value: carbohydrates,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Fat per 100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          name: \"fatPer100g\",\n          value: fat,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), renderNutritionalSection('Carbohydrates', nutritionalInfo.Carbohydrates, 'Carbohydrate Information'), renderNutritionalSection('Vitamins', nutritionalInfo.Vitamins, 'Vitamins'), renderNutritionalSection('AminoAcids', nutritionalInfo.AminoAcids, 'Amino Acids'), renderNutritionalSection('Fats', nutritionalInfo.Fats, 'Fats'), renderNutritionalSection('Minerals', nutritionalInfo.Minerals, 'Minerals'), renderNutritionalSection('Sterols', nutritionalInfo.Sterols, 'Sterols'), renderNutritionalSection('More', nutritionalInfo.More, 'Additional Information'), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? 'Loading...' : 'Add Consumable'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 24\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(AddConsumableForm, \"a9ItkzsmyZBdloOPb9Ols8lHJWs=\");\n_c = AddConsumableForm;\nexport default AddConsumableForm;\nvar _c;\n$RefreshReg$(_c, \"AddConsumableForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddConsumableForm","_s","itemName","setItemName","type","setType","calories","setCalories","protein","setProtein","carbohydrates","setCarbohydrates","fat","setFat","errorMessage","setErrorMessage","successMessage","setSuccessMessage","isLoading","setIsLoading","nutritionalInfo","setNutritionalInfo","Carbohydrates","Fibers","Starch","Sugars","galactose","Glucose","Sucrose","lactose","Maltose","Fructose","Vitamins","Betaine","AminoAcids","Alanine","Arginine","Valin","Glycine","glutamine","Isoleucine","Leucine","Lysine","Methionine","Proline","Serine","Tyrosine","Threonine","tryptophan","Phenylalanine","Hydroxyproline","histidine","Cystine","Fats","Minerals","Iron","Potassium","Calcium","Magnesium","Manganese","Med","Sodium","Selenium","Fluoride","Phosphorus","Zinc","Sterols","Cholesterol","Phytosterols","Stigmasteroli","Campesteroli","More","Alcohol","Water","Caffeine","Theobromine","Ashes","handleSubmit","e","preventDefault","consumableItem","Name","CaloriesPer100g","ProteinPer100g","CarbohydratePer100g","FatPer100g","Type","NutritionalInformation","response","fetch","method","credentials","headers","body","JSON","stringify","ok","Error","err","message","handleChange","name","value","target","parseFloat","handleNutritionalChange","section","key","prevInfo","renderNutritionalSection","sectionName","sectionData","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","step","onChange","onSubmit","required","disabled","_c","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/Forms/AddConsumableForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../../css/AddConsumableForm.css';\r\n\r\nconst AddConsumableForm = () => {\r\n  const [itemName, setItemName] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [calories, setCalories] = useState(0);\r\n  const [protein, setProtein] = useState(0.0);\r\n  const [carbohydrates, setCarbohydrates] = useState(0.0);\r\n  const [fat, setFat] = useState(0.0);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  // Handle loading state\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Initialize state for nutritional information\r\n  const [nutritionalInfo, setNutritionalInfo] = useState({\r\n    Carbohydrates: {\r\n      Fibers: 0.0,\r\n      Starch: 0.0,\r\n      Sugars: 0.0,\r\n      galactose: 0.0,\r\n      Glucose: 0.0,\r\n      Sucrose: 0.0,\r\n      lactose: 0.0,\r\n      Maltose: 0.0,\r\n      Fructose: 0.0,\r\n    },\r\n    Vitamins: {\r\n      Betaine: 0.0,\r\n      \"Vitamin A\": 0.0,\r\n      \"Vitamin B1 (thiamine)\": 0.0,\r\n      \"Vitamin B2 (riboflavin)\": 0.0,\r\n      \"Vitamin B3 (niacin)\": 0.0,\r\n      \"Vitamin B4 (choline)\": 0.0,\r\n      \"Vitamin B5 (Pantothenic Acid)\": 0.0,\r\n      \"Vitamin B6 (Pyridoxine)\": 0.0,\r\n      \"Vitamin B9 (Folic Acid)\": 0.0,\r\n      \"Vitamin B12 (Cobalcamine)\": 0.0,\r\n      \"Vitamin C\": 0.0,\r\n      \"Vitamin D\": 0.0,\r\n      \"Vitamin E\": 0.0,\r\n      \"Vitamin K1\": 0.0,\r\n      \"Vitamin K2 (MK04)\": 0.0,\r\n    },\r\n    AminoAcids: {\r\n      Alanine: 0.0,\r\n      Arginine: 0.0,\r\n      \"Aspartic acid\": 0.0,\r\n      Valin: 0.0,\r\n      Glycine: 0.0,\r\n      glutamine: 0.0,\r\n      Isoleucine: 0.0,\r\n      Leucine: 0.0,\r\n      Lysine: 0.0,\r\n      Methionine: 0.0,\r\n      Proline: 0.0,\r\n      Serine: 0.0,\r\n      Tyrosine: 0.0,\r\n      Threonine: 0.0,\r\n      tryptophan: 0.0,\r\n      Phenylalanine: 0.0,\r\n      Hydroxyproline: 0.0,\r\n      histidine: 0.0,\r\n      Cystine: 0.0,\r\n    },\r\n    Fats: {\r\n      \"Monounsaturated fats\": 0.0,\r\n      \"Polyunsaturated fats\": 0.0,\r\n      \"Saturated fat\": 0.0,\r\n      \"Trans fats\": 0.0,\r\n    },\r\n    Minerals: {\r\n      Iron: 0.0,\r\n      Potassium: 0.0,\r\n      Calcium: 0.0,\r\n      Magnesium: 0.0,\r\n      Manganese: 0.0,\r\n      Med: 0.0,\r\n      Sodium: 0.0,\r\n      Selenium: 0.0,\r\n      Fluoride: 0.0,\r\n      Phosphorus: 0.0,\r\n      Zinc: 0.0,\r\n    },\r\n    Sterols: {\r\n      Cholesterol: 0.0,\r\n      Phytosterols: 0.0,\r\n      Stigmasteroli: 0.0,\r\n      Campesteroli: 0.0,\r\n      \"Beta-sitosterols\": 0.0,\r\n    },\r\n    More: {\r\n      Alcohol: 0.0,\r\n      Water: 0.0,\r\n      Caffeine: 0.0,\r\n      Theobromine: 0.0,\r\n      Ashes: 0.0,\r\n    },\r\n  });\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    const consumableItem = {\r\n      Name: itemName,\r\n      CaloriesPer100g: calories,\r\n      ProteinPer100g: protein,\r\n      CarbohydratePer100g: carbohydrates,\r\n      FatPer100g: fat,\r\n      Type: type,\r\n      NutritionalInformation: nutritionalInfo\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://localhost:7009/api/admin/add-consumable-item', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(consumableItem),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Adding a consumable item failed');\r\n      }\r\n\r\n      setSuccessMessage('Consumable item added successfully!');\r\n    } catch (err) {\r\n      setErrorMessage(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle change in form fields\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setItemName(value);\r\n        break;\r\n      case 'type':\r\n        setType(value);\r\n        break;\r\n      case 'caloriesPer100g':\r\n        setCalories(parseFloat(value));\r\n        break;\r\n      case 'proteinPer100g':\r\n        setProtein(parseFloat(value));\r\n        break;\r\n      case 'carbohydratePer100g':\r\n        setCarbohydrates(parseFloat(value));\r\n        break;\r\n      case 'fatPer100g':\r\n        setFat(parseFloat(value));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Handle change in nutritional information\r\n  const handleNutritionalChange = (section, key, value) => {\r\n    setNutritionalInfo((prevInfo) => ({\r\n      ...prevInfo,\r\n      [section]: {\r\n        ...prevInfo[section],\r\n        [key]: parseFloat(value),\r\n      },\r\n    }));\r\n  };\r\n\r\n  // Render form fields for different sections\r\n  const renderNutritionalSection = (sectionName, sectionData, title) => (\r\n    <div className=\"collapsible-card\">\r\n      <div className=\"collapsible-header\">\r\n        <h3>{title}</h3>\r\n      </div>\r\n      <div className=\"collapsible-content grid-container\">\r\n        {Object.entries(sectionData).map(([key, value]) => (\r\n          <div className=\"form-group grid-item\" key={key}>\r\n            <label>{key}</label>\r\n            <input\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              name={key}\r\n              value={value}\r\n              onChange={(e) => handleNutritionalChange(sectionName, key, e.target.value)}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"add-consumable-form\">\r\n      <h2>Add New Consumable</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Name:</label>\r\n          <input type=\"text\" name=\"name\" value={itemName} onChange={handleChange} required />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Type:</label>\r\n          <select name=\"type\" value={type} onChange={handleChange} required>\r\n            <option value=\"\">Select Type</option>\r\n            <option value=\"Food\">Food</option>\r\n            <option value=\"Drink\">Drink</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Calories per 100g:</label>\r\n          <input type=\"number\" name=\"caloriesPer100g\" value={calories} onChange={handleChange} required />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Protein per 100g:</label>\r\n          <input type=\"number\" step=\"0.01\" name=\"proteinPer100g\" value={protein} onChange={handleChange} required />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Carbohydrate per 100g:</label>\r\n          <input type=\"number\" step=\"0.01\" name=\"carbohydratePer100g\" value={carbohydrates} onChange={handleChange} required />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fat per 100g:</label>\r\n          <input type=\"number\" step=\"0.01\" name=\"fatPer100g\" value={fat} onChange={handleChange} required />\r\n        </div>\r\n\r\n        {renderNutritionalSection('Carbohydrates', nutritionalInfo.Carbohydrates, 'Carbohydrate Information')}\r\n        {renderNutritionalSection('Vitamins', nutritionalInfo.Vitamins, 'Vitamins')}\r\n        {renderNutritionalSection('AminoAcids', nutritionalInfo.AminoAcids, 'Amino Acids')}\r\n        {renderNutritionalSection('Fats', nutritionalInfo.Fats, 'Fats')}\r\n        {renderNutritionalSection('Minerals', nutritionalInfo.Minerals, 'Minerals')}\r\n        {renderNutritionalSection('Sterols', nutritionalInfo.Sterols, 'Sterols')}\r\n        {renderNutritionalSection('More', nutritionalInfo.More, 'Additional Information')}\r\n\r\n        <button type=\"submit\" disabled={isLoading}>{isLoading ? 'Loading...' : 'Add Consumable'}</button>\r\n      </form>\r\n\r\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n      {successMessage && <div className=\"success-message\">{successMessage}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddConsumableForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}