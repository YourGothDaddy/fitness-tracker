{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\Forms\\\\MealForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddMealForm = () => {\n  _s();\n  const [mealName, setMealName] = useState(\"\");\n  const [mealType, setMealType] = useState(\"Breakfast\");\n  const [calories, setCalories] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Basic validation\n    if (mealName.trim() === \"\" || calories.trim() === \"\") {\n      setErrorMessage(\"Please fill out all fields.\");\n      return;\n    }\n    if (isNaN(calories) || calories <= 0) {\n      setErrorMessage(\"Please enter a valid number of calories.\");\n      return;\n    }\n\n    // Submit form logic here\n    console.log(\"Meal added:\", {\n      name: mealName,\n      type: mealType,\n      calories: parseInt(calories, 10)\n    });\n\n    // Clear form\n    setMealName(\"\");\n    setMealType(\"Breakfast\");\n    setCalories(\"\");\n    setErrorMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header bg-primary text-white\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add a New Meal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            role: \"alert\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"mealName\",\n              className: \"form-label\",\n              children: \"Meal Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"mealName\",\n              placeholder: \"Enter meal name\",\n              value: mealName,\n              onChange: e => setMealName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"mealType\",\n              className: \"form-label\",\n              children: \"Meal Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              id: \"mealType\",\n              value: mealType,\n              onChange: e => setMealType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Breakfast\",\n                children: \"Breakfast\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Lunch\",\n                children: \"Lunch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Dinner\",\n                children: \"Dinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Snack\",\n                children: \"Snack\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"calories\",\n              className: \"form-label\",\n              children: \"Calories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: \"calories\",\n              placeholder: \"Enter calories\",\n              value: calories,\n              onChange: e => setCalories(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-100\",\n            children: \"Add Meal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(AddMealForm, \"jbzmtwarkXMKDQGEmq3az2WDu0g=\");\n_c = AddMealForm;\nexport default AddMealForm;\nvar _c;\n$RefreshReg$(_c, \"AddMealForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddMealForm","_s","mealName","setMealName","mealType","setMealType","calories","setCalories","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","trim","isNaN","console","log","name","type","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","role","htmlFor","id","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/Forms/MealForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst AddMealForm = () => {\r\n    const [mealName, setMealName] = useState(\"\");\r\n    const [mealType, setMealType] = useState(\"Breakfast\");\r\n    const [calories, setCalories] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Basic validation\r\n        if (mealName.trim() === \"\" || calories.trim() === \"\") {\r\n            setErrorMessage(\"Please fill out all fields.\");\r\n            return;\r\n        }\r\n\r\n        if (isNaN(calories) || calories <= 0) {\r\n            setErrorMessage(\"Please enter a valid number of calories.\");\r\n            return;\r\n        }\r\n\r\n        // Submit form logic here\r\n        console.log(\"Meal added:\", {\r\n            name: mealName,\r\n            type: mealType,\r\n            calories: parseInt(calories, 10),\r\n        });\r\n\r\n        // Clear form\r\n        setMealName(\"\");\r\n        setMealType(\"Breakfast\");\r\n        setCalories(\"\");\r\n        setErrorMessage(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"card shadow-lg\">\r\n                <div className=\"card-header bg-primary text-white\">\r\n                    <h3>Add a New Meal</h3>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        {errorMessage && (\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {errorMessage}\r\n                            </div>\r\n                        )}\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"mealName\" className=\"form-label\">\r\n                                Meal Name\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"mealName\"\r\n                                placeholder=\"Enter meal name\"\r\n                                value={mealName}\r\n                                onChange={(e) => setMealName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"mealType\" className=\"form-label\">\r\n                                Meal Type\r\n                            </label>\r\n                            <select\r\n                                className=\"form-select\"\r\n                                id=\"mealType\"\r\n                                value={mealType}\r\n                                onChange={(e) => setMealType(e.target.value)}\r\n                            >\r\n                                <option value=\"Breakfast\">Breakfast</option>\r\n                                <option value=\"Lunch\">Lunch</option>\r\n                                <option value=\"Dinner\">Dinner</option>\r\n                                <option value=\"Snack\">Snack</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"calories\" className=\"form-label\">\r\n                                Calories\r\n                            </label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                id=\"calories\"\r\n                                placeholder=\"Enter calories\"\r\n                                value={calories}\r\n                                onChange={(e) => setCalories(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n                            Add Meal\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddMealForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}