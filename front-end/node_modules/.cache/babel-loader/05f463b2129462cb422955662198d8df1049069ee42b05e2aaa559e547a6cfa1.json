{"ast":null,"code":"import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\r\n * Create a `motion` component.\r\n *\r\n * This function accepts a Component argument, which can be either a string (ie \"div\"\r\n * for `motion.div`), or an actual React component.\r\n *\r\n * Alongside this is a config option which provides a way of rendering the provided\r\n * component \"offline\", or outside the React render cycle.\r\n */\nfunction createMotionComponent({\n  preloadedFeatures,\n  createVisualElement,\n  useRender,\n  useVisualState,\n  Component\n}) {\n  preloadedFeatures && loadFeatures(preloadedFeatures);\n  function MotionComponent(props, externalRef) {\n    /**\r\n     * If we need to measure the element we load this functionality in a\r\n     * separate class component in order to gain access to getSnapshotBeforeUpdate.\r\n     */\n    let MeasureLayout;\n    const configAndProps = {\n      ...useContext(MotionConfigContext),\n      ...props,\n      layoutId: useLayoutId(props)\n    };\n    const {\n      isStatic\n    } = configAndProps;\n    const context = useCreateMotionContext(props);\n    const visualState = useVisualState(props, isStatic);\n    if (!isStatic && isBrowser) {\n      useStrictMode(configAndProps, preloadedFeatures);\n      const layoutProjection = getProjectionFunctionality(configAndProps);\n      MeasureLayout = layoutProjection.MeasureLayout;\n      /**\r\n       * Create a VisualElement for this component. A VisualElement provides a common\r\n       * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\r\n       * providing a way of rendering to these APIs outside of the React render loop\r\n       * for more performant animations and interactions\r\n       */\n      context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n    }\n    /**\r\n     * The mount order and hierarchy is specific to ensure our element ref\r\n     * is hydrated by the time features fire their effects.\r\n     */\n    return jsxs(MotionContext.Provider, {\n      value: context,\n      children: [MeasureLayout && context.visualElement ? jsx(MeasureLayout, {\n        visualElement: context.visualElement,\n        ...configAndProps\n      }) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)]\n    });\n  }\n  const ForwardRefComponent = forwardRef(MotionComponent);\n  ForwardRefComponent[motionComponentSymbol] = Component;\n  return ForwardRefComponent;\n}\nfunction useLayoutId({\n  layoutId\n}) {\n  const layoutGroupId = useContext(LayoutGroupContext).id;\n  return layoutGroupId && layoutId !== undefined ? layoutGroupId + \"-\" + layoutId : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n  const isStrict = useContext(LazyContext).strict;\n  /**\r\n   * If we're in development mode, check to make sure we're not rendering a motion component\r\n   * as a child of LazyMotion, as this will break the file-size benefits of using it.\r\n   */\n  if (process.env.NODE_ENV !== \"production\" && preloadedFeatures && isStrict) {\n    const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n    configAndProps.ignoreStrict ? warning(false, strictMessage) : invariant(false, strictMessage);\n  }\n}\nfunction getProjectionFunctionality(props) {\n  const {\n    drag,\n    layout\n  } = featureDefinitions;\n  if (!drag && !layout) return {};\n  const combined = {\n    ...drag,\n    ...layout\n  };\n  return {\n    MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props)) ? combined.MeasureLayout : undefined,\n    ProjectionNode: combined.ProjectionNode\n  };\n}\nexport { createMotionComponent };","map":{"version":3,"names":["jsxs","jsx","forwardRef","useContext","MotionConfigContext","MotionContext","useVisualElement","useMotionRef","useCreateMotionContext","loadFeatures","isBrowser","LayoutGroupContext","LazyContext","motionComponentSymbol","warning","invariant","featureDefinitions","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","MotionComponent","props","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","isStatic","context","visualState","useStrictMode","layoutProjection","getProjectionFunctionality","visualElement","ProjectionNode","Provider","value","children","ForwardRefComponent","layoutGroupId","id","undefined","isStrict","strict","process","env","NODE_ENV","strictMessage","ignoreStrict","drag","layout","combined","isEnabled"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/node_modules/framer-motion/dist/es/motion/index.mjs"],"sourcesContent":["import { jsxs, jsx } from 'react/jsx-runtime';\r\nimport { forwardRef, useContext } from 'react';\r\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\r\nimport { MotionContext } from '../context/MotionContext/index.mjs';\r\nimport { useVisualElement } from './utils/use-visual-element.mjs';\r\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\r\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\r\nimport { loadFeatures } from './features/load-features.mjs';\r\nimport { isBrowser } from '../utils/is-browser.mjs';\r\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\r\nimport { LazyContext } from '../context/LazyContext.mjs';\r\nimport { motionComponentSymbol } from './utils/symbol.mjs';\r\nimport { warning, invariant } from '../utils/errors.mjs';\r\nimport { featureDefinitions } from './features/definitions.mjs';\r\n\r\n/**\r\n * Create a `motion` component.\r\n *\r\n * This function accepts a Component argument, which can be either a string (ie \"div\"\r\n * for `motion.div`), or an actual React component.\r\n *\r\n * Alongside this is a config option which provides a way of rendering the provided\r\n * component \"offline\", or outside the React render cycle.\r\n */\r\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\r\n    preloadedFeatures && loadFeatures(preloadedFeatures);\r\n    function MotionComponent(props, externalRef) {\r\n        /**\r\n         * If we need to measure the element we load this functionality in a\r\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\r\n         */\r\n        let MeasureLayout;\r\n        const configAndProps = {\r\n            ...useContext(MotionConfigContext),\r\n            ...props,\r\n            layoutId: useLayoutId(props),\r\n        };\r\n        const { isStatic } = configAndProps;\r\n        const context = useCreateMotionContext(props);\r\n        const visualState = useVisualState(props, isStatic);\r\n        if (!isStatic && isBrowser) {\r\n            useStrictMode(configAndProps, preloadedFeatures);\r\n            const layoutProjection = getProjectionFunctionality(configAndProps);\r\n            MeasureLayout = layoutProjection.MeasureLayout;\r\n            /**\r\n             * Create a VisualElement for this component. A VisualElement provides a common\r\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\r\n             * providing a way of rendering to these APIs outside of the React render loop\r\n             * for more performant animations and interactions\r\n             */\r\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\r\n        }\r\n        /**\r\n         * The mount order and hierarchy is specific to ensure our element ref\r\n         * is hydrated by the time features fire their effects.\r\n         */\r\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\r\n    }\r\n    const ForwardRefComponent = forwardRef(MotionComponent);\r\n    ForwardRefComponent[motionComponentSymbol] = Component;\r\n    return ForwardRefComponent;\r\n}\r\nfunction useLayoutId({ layoutId }) {\r\n    const layoutGroupId = useContext(LayoutGroupContext).id;\r\n    return layoutGroupId && layoutId !== undefined\r\n        ? layoutGroupId + \"-\" + layoutId\r\n        : layoutId;\r\n}\r\nfunction useStrictMode(configAndProps, preloadedFeatures) {\r\n    const isStrict = useContext(LazyContext).strict;\r\n    /**\r\n     * If we're in development mode, check to make sure we're not rendering a motion component\r\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\r\n     */\r\n    if (process.env.NODE_ENV !== \"production\" &&\r\n        preloadedFeatures &&\r\n        isStrict) {\r\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\r\n        configAndProps.ignoreStrict\r\n            ? warning(false, strictMessage)\r\n            : invariant(false, strictMessage);\r\n    }\r\n}\r\nfunction getProjectionFunctionality(props) {\r\n    const { drag, layout } = featureDefinitions;\r\n    if (!drag && !layout)\r\n        return {};\r\n    const combined = { ...drag, ...layout };\r\n    return {\r\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\r\n            ? combined.MeasureLayout\r\n            : undefined,\r\n        ProjectionNode: combined.ProjectionNode,\r\n    };\r\n}\r\n\r\nexport { createMotionComponent };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}