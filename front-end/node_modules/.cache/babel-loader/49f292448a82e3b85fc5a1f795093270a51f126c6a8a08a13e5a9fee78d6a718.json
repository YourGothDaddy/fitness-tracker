{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\DateNavigation.js\";\nimport React from \"react\";\nimport \"../css/DateNavigation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateNavigation = ({\n  selectedDate,\n  onPreviousDay,\n  onNextDay,\n  isToday\n}) => {\n  // Format the date as DD/MM/YYYY\n  const formattedDate = selectedDate.toLocaleDateString(\"en-GB\", {\n    day: \"2-digit\",\n    month: \"2-digit\",\n    year: \"numeric\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"date-navigation\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onPreviousDay,\n      children: \"\\u2190\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onNextDay,\n      disabled: isToday,\n      children: \"\\u2192\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = DateNavigation;\nexport default DateNavigation;\nvar _c;\n$RefreshReg$(_c, \"DateNavigation\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DateNavigation","selectedDate","onPreviousDay","onNextDay","isToday","formattedDate","toLocaleDateString","day","month","year","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/DateNavigation.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../css/DateNavigation.css\";\r\n\r\nconst DateNavigation = ({\r\n  selectedDate,\r\n  onPreviousDay,\r\n  onNextDay,\r\n  isToday,\r\n}) => {\r\n  // Format the date as DD/MM/YYYY\r\n  const formattedDate = selectedDate.toLocaleDateString(\"en-GB\", {\r\n    day: \"2-digit\",\r\n    month: \"2-digit\",\r\n    year: \"numeric\",\r\n  });\r\n\r\n  return (\r\n    <div className=\"date-navigation\">\r\n      <button onClick={onPreviousDay}>←</button>\r\n      <span>{formattedDate}</span>\r\n      <button onClick={onNextDay} disabled={isToday}>\r\n        →\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateNavigation;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,cAAc,GAAGA,CAAC;EACtBC,YAAY;EACZC,aAAa;EACbC,SAAS;EACTC;AACF,CAAC,KAAK;EACJ;EACA,MAAMC,aAAa,GAAGJ,YAAY,CAACK,kBAAkB,CAAC,OAAO,EAAE;IAC7DC,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE,SAAS;IAChBC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,oBACEV,OAAA;IAAKW,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BZ,OAAA;MAAQa,OAAO,EAAEV,aAAc;MAAAS,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1CjB,OAAA;MAAAY,QAAA,EAAON;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5BjB,OAAA;MAAQa,OAAO,EAAET,SAAU;MAACc,QAAQ,EAAEb,OAAQ;MAAAO,QAAA,EAAC;IAE/C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACE,EAAA,GAtBIlB,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}