{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\Forms\\\\AddConsumableForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../css/AddConsumableForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddConsumableForm = () => {\n  _s();\n  const [itemName, setItemName] = useState(\"\");\n  const [calories, setCalories] = useState(0);\n  const [protein, setProtein] = useState(0.0);\n  const [carbohydrates, setCarbohydrates] = useState(0.0);\n  const [fat, setFat] = useState(0.0);\n  const [type, setType] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [sections, setSections] = useState({\n    Carbohydrates: false,\n    Vitamins: false,\n    AminoAcids: false,\n    Fats: false,\n    Minerals: false,\n    Sterols: false,\n    More: false\n  });\n  const [nutritionalInfo, setNutritionalInfo] = useState({\n    Carbohydrates: {\n      Fibers: 0.0,\n      Starch: 0.0,\n      Sugars: 0.0,\n      galactose: 0.0,\n      Glucose: 0.0,\n      Sucrose: 0.0,\n      lactose: 0.0,\n      Maltose: 0.0,\n      Fructose: 0.0\n    },\n    Vitamins: {\n      Betaine: 0.0,\n      \"Vitamin A\": 0.0,\n      \"Vitamin B1 (thiamine)\": 0.0,\n      \"Vitamin B2 (riboflavin)\": 0.0,\n      \"Vitamin B3 (niacin)\": 0.0,\n      \"Vitamin B4 (choline)\": 0.0,\n      \"Vitamin B5 (Pantothenic Acid)\": 0.0,\n      \"Vitamin B6 (Pyridoxine)\": 0.0,\n      \"Vitamin B9 (Folic Acid)\": 0.0,\n      \"Vitamin B12 (Cobalcamine)\": 0.0,\n      \"Vitamin C\": 0.0,\n      \"Vitamin D\": 0.0,\n      \"Vitamin E\": 0.0,\n      \"Vitamin K1\": 0.0,\n      \"Vitamin K2 (MK04)\": 0.0\n    },\n    AminoAcids: {\n      Alanine: 0.0,\n      Arginine: 0.0,\n      \"Aspartic acid\": 0.0,\n      Valin: 0.0,\n      Glycine: 0.0,\n      Glutamine: 0.0,\n      Isoleucine: 0.0,\n      Leucine: 0.0,\n      Lysine: 0.0,\n      Methionine: 0.0,\n      Proline: 0.0,\n      Serine: 0.0,\n      Tyrosine: 0.0,\n      Threonine: 0.0,\n      tryptophan: 0.0,\n      Phenylalanine: 0.0,\n      Hydroxyproline: 0.0,\n      histidine: 0.0,\n      Cystine: 0.0\n    },\n    Fats: {\n      \"Monounsaturated fats\": 0.0,\n      \"Polyunsaturated fats\": 0.0,\n      \"Saturated fat\": 0.0,\n      \"Trans fats\": 0.0\n    },\n    Minerals: {\n      Iron: 0.0,\n      Potassium: 0.0,\n      Calcium: 0.0,\n      Magnesium: 0.0,\n      Manganese: 0.0,\n      Med: 0.0,\n      Sodium: 0.0,\n      Selenium: 0.0,\n      Fluoride: 0.0,\n      Phosphorus: 0.0,\n      Zinc: 0.0\n    },\n    Sterols: {\n      Cholesterol: 0.0,\n      Phytosterols: 0.0,\n      Stigmasteroli: 0.0,\n      Campesteroli: 0.0,\n      \"Beta-sitosterols\": 0.0\n    },\n    More: {\n      Alcohol: 0.0,\n      Water: 0.0,\n      Caffeine: 0.0,\n      Theobromine: 0.0,\n      Ashes: 0.0\n    }\n  });\n  const handleNutritionalChange = (sectionName, key, value) => {\n    setNutritionalInfo(prevInfo => ({\n      ...prevInfo,\n      [sectionName]: {\n        ...prevInfo[sectionName],\n        [key]: parseFloat(value)\n      }\n    }));\n  };\n  const toggleSection = sectionName => {\n    setSections(prevSections => ({\n      ...prevSections,\n      [sectionName]: !prevSections[sectionName]\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrorMessage('');\n    setSuccessMessage('');\n    const nutritionalInformationArray = Object.entries(nutritionalInfo).flatMap(([category, nutrients]) => Object.entries(nutrients).map(([name, amount]) => ({\n      category,\n      name,\n      amount\n    })));\n    const consumableItem = {\n      Name: 'itemName',\n      CaloriesPer100g: 11,\n      ProteinPer100g: 11,\n      CarbohydratePer100g: 11,\n      FatPer100g: 11,\n      Type: 1,\n      NutritionalInformation: nutritionalInformationArray\n    };\n    try {\n      const response = await fetch('https://localhost:7009/api/admin/add-consumable-item', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(consumableItem)\n      });\n      if (!response.ok) {\n        throw new Error('Adding a consumable item failed');\n      }\n      setSuccessMessage('Consumable item added successfully!');\n    } catch (err) {\n      setErrorMessage(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const renderNutritionalSection = (sectionName, sectionData, title) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `collapsible-card ${sections[sectionName] ? 'expanded' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapsible-header\",\n      onClick: () => toggleSection(sectionName),\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), sections[sectionName] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapsible-content grid-container\",\n      children: Object.entries(sectionData).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group grid-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: key.charAt(0).toUpperCase() + key.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          name: key,\n          value: value,\n          onChange: e => handleNutritionalChange(sectionName, key, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-consumable-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Consumable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: itemName,\n          onChange: e => setItemName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: type,\n          onChange: e => setType(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Food\",\n            children: \"Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Drink\",\n            children: \"Drink\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Calories per 100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: calories,\n          onChange: e => setCalories(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Protein per 100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: protein,\n          onChange: e => setProtein(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Carbohydrate per 100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: carbohydrates,\n          onChange: e => setCarbohydrates(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Fat per 100g:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: fat,\n          onChange: e => setFat(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), renderNutritionalSection('Carbohydrates', nutritionalInfo.Carbohydrates, 'Carbohydrate Information'), renderNutritionalSection('Vitamins', nutritionalInfo.Vitamins, 'Vitamin Information'), renderNutritionalSection('AminoAcids', nutritionalInfo.AminoAcids, 'Amino Acid Information'), renderNutritionalSection('Fats', nutritionalInfo.Fats, 'Fat Information'), renderNutritionalSection('Minerals', nutritionalInfo.Minerals, 'Mineral Information'), renderNutritionalSection('Sterols', nutritionalInfo.Sterols, 'Sterol Information'), renderNutritionalSection('More', nutritionalInfo.More, 'More Information'), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Add Consumable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 24\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 26\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(AddConsumableForm, \"/FS7fgMTrPgpNgzWnMuPpIrdnFM=\");\n_c = AddConsumableForm;\nexport default AddConsumableForm;\nvar _c;\n$RefreshReg$(_c, \"AddConsumableForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddConsumableForm","_s","itemName","setItemName","calories","setCalories","protein","setProtein","carbohydrates","setCarbohydrates","fat","setFat","type","setType","errorMessage","setErrorMessage","successMessage","setSuccessMessage","isLoading","setIsLoading","sections","setSections","Carbohydrates","Vitamins","AminoAcids","Fats","Minerals","Sterols","More","nutritionalInfo","setNutritionalInfo","Fibers","Starch","Sugars","galactose","Glucose","Sucrose","lactose","Maltose","Fructose","Betaine","Alanine","Arginine","Valin","Glycine","Glutamine","Isoleucine","Leucine","Lysine","Methionine","Proline","Serine","Tyrosine","Threonine","tryptophan","Phenylalanine","Hydroxyproline","histidine","Cystine","Iron","Potassium","Calcium","Magnesium","Manganese","Med","Sodium","Selenium","Fluoride","Phosphorus","Zinc","Cholesterol","Phytosterols","Stigmasteroli","Campesteroli","Alcohol","Water","Caffeine","Theobromine","Ashes","handleNutritionalChange","sectionName","key","value","prevInfo","parseFloat","toggleSection","prevSections","handleSubmit","e","preventDefault","nutritionalInformationArray","Object","entries","flatMap","category","nutrients","map","name","amount","consumableItem","Name","CaloriesPer100g","ProteinPer100g","CarbohydratePer100g","FatPer100g","Type","NutritionalInformation","response","fetch","method","credentials","headers","body","JSON","stringify","ok","Error","err","message","renderNutritionalSection","sectionData","title","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","step","onChange","target","onSubmit","required","_c","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/Forms/AddConsumableForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../../css/AddConsumableForm.css';\r\n\r\nconst AddConsumableForm = () => {\r\n  const [itemName, setItemName] = useState(\"\");\r\n  const [calories, setCalories] = useState(0);\r\n  const [protein, setProtein] = useState(0.0);\r\n  const [carbohydrates, setCarbohydrates] = useState(0.0);\r\n  const [fat, setFat] = useState(0.0);\r\n  const [type, setType] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [sections, setSections] = useState({\r\n    Carbohydrates: false,\r\n    Vitamins: false,\r\n    AminoAcids: false,\r\n    Fats: false,\r\n    Minerals: false,\r\n    Sterols: false,\r\n    More: false,\r\n  });\r\n\r\n  const [nutritionalInfo, setNutritionalInfo] = useState({\r\n    Carbohydrates: {\r\n      Fibers: 0.0,\r\n      Starch: 0.0,\r\n      Sugars: 0.0,\r\n      galactose: 0.0,\r\n      Glucose: 0.0,\r\n      Sucrose: 0.0,\r\n      lactose: 0.0,\r\n      Maltose: 0.0,\r\n      Fructose: 0.0,\r\n    },\r\n    Vitamins: {\r\n      Betaine: 0.0,\r\n      \"Vitamin A\": 0.0,\r\n      \"Vitamin B1 (thiamine)\": 0.0,\r\n      \"Vitamin B2 (riboflavin)\": 0.0,\r\n      \"Vitamin B3 (niacin)\": 0.0,\r\n      \"Vitamin B4 (choline)\": 0.0,\r\n      \"Vitamin B5 (Pantothenic Acid)\": 0.0,\r\n      \"Vitamin B6 (Pyridoxine)\": 0.0,\r\n      \"Vitamin B9 (Folic Acid)\": 0.0,\r\n      \"Vitamin B12 (Cobalcamine)\": 0.0,\r\n      \"Vitamin C\": 0.0,\r\n      \"Vitamin D\": 0.0,\r\n      \"Vitamin E\": 0.0,\r\n      \"Vitamin K1\": 0.0,\r\n      \"Vitamin K2 (MK04)\": 0.0,\r\n    },\r\n    AminoAcids: {\r\n      Alanine: 0.0,\r\n      Arginine: 0.0,\r\n      \"Aspartic acid\": 0.0,\r\n      Valin: 0.0,\r\n      Glycine: 0.0,\r\n      Glutamine: 0.0,\r\n      Isoleucine: 0.0,\r\n      Leucine: 0.0,\r\n      Lysine: 0.0,\r\n      Methionine: 0.0,\r\n      Proline: 0.0,\r\n      Serine: 0.0,\r\n      Tyrosine: 0.0,\r\n      Threonine: 0.0,\r\n      tryptophan: 0.0,\r\n      Phenylalanine: 0.0,\r\n      Hydroxyproline: 0.0,\r\n      histidine: 0.0,\r\n      Cystine: 0.0,\r\n    },\r\n    Fats: {\r\n      \"Monounsaturated fats\": 0.0,\r\n      \"Polyunsaturated fats\": 0.0,\r\n      \"Saturated fat\": 0.0,\r\n      \"Trans fats\": 0.0,\r\n    },\r\n    Minerals: {\r\n      Iron: 0.0,\r\n      Potassium: 0.0,\r\n      Calcium: 0.0,\r\n      Magnesium: 0.0,\r\n      Manganese: 0.0,\r\n      Med: 0.0,\r\n      Sodium: 0.0,\r\n      Selenium: 0.0,\r\n      Fluoride: 0.0,\r\n      Phosphorus: 0.0,\r\n      Zinc: 0.0,\r\n    },\r\n    Sterols: {\r\n      Cholesterol: 0.0,\r\n      Phytosterols: 0.0,\r\n      Stigmasteroli: 0.0,\r\n      Campesteroli: 0.0,\r\n      \"Beta-sitosterols\": 0.0,\r\n    },\r\n    More: {\r\n      Alcohol: 0.0,\r\n      Water: 0.0,\r\n      Caffeine: 0.0,\r\n      Theobromine: 0.0,\r\n      Ashes: 0.0,\r\n    },\r\n  });\r\n\r\n  const handleNutritionalChange = (sectionName, key, value) => {\r\n    setNutritionalInfo((prevInfo) => ({\r\n      ...prevInfo,\r\n      [sectionName]: {\r\n        ...prevInfo[sectionName],\r\n        [key]: parseFloat(value),\r\n      },\r\n    }));\r\n  };\r\n\r\n  const toggleSection = (sectionName) => {\r\n    setSections((prevSections) => ({\r\n      ...prevSections,\r\n      [sectionName]: !prevSections[sectionName],\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setErrorMessage('');\r\n    setSuccessMessage('');\r\n\r\n    const nutritionalInformationArray = Object.entries(nutritionalInfo).flatMap(\r\n      ([category, nutrients]) =>\r\n        Object.entries(nutrients).map(([name, amount]) => ({\r\n          category,\r\n          name,\r\n          amount,\r\n        }))\r\n    );\r\n\r\n    const consumableItem = {\r\n      Name: 'itemName',\r\n      CaloriesPer100g: 11,\r\n      ProteinPer100g: 11,\r\n      CarbohydratePer100g: 11,\r\n      FatPer100g: 11,\r\n      Type: 1,\r\n      NutritionalInformation: nutritionalInformationArray,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://localhost:7009/api/admin/add-consumable-item', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(consumableItem),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Adding a consumable item failed');\r\n      }\r\n\r\n      setSuccessMessage('Consumable item added successfully!');\r\n    } catch (err) {\r\n      setErrorMessage(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderNutritionalSection = (sectionName, sectionData, title) => (\r\n    <div className={`collapsible-card ${sections[sectionName] ? 'expanded' : ''}`}>\r\n      <div className=\"collapsible-header\" onClick={() => toggleSection(sectionName)}>\r\n        <h3>{title}</h3>\r\n      </div>\r\n      {sections[sectionName] && (\r\n        <div className=\"collapsible-content grid-container\">\r\n          {Object.entries(sectionData).map(([key, value]) => (\r\n            <div className=\"form-group grid-item\" key={key}>\r\n              <label>{key.charAt(0).toUpperCase() + key.slice(1)}</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                name={key}\r\n                value={value}\r\n                onChange={(e) => handleNutritionalChange(sectionName, key, e.target.value)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"add-consumable-form\">\r\n      <h2>Add New Consumable</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Name:</label>\r\n          <input type=\"text\" value={itemName} onChange={(e) => setItemName(e.target.value)} required />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Type:</label>\r\n          <select value={type} onChange={(e) => setType(e.target.value)} required>\r\n            <option value=\"\">Select Type</option>\r\n            <option value=\"Food\">Food</option>\r\n            <option value=\"Drink\">Drink</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Calories per 100g:</label>\r\n          <input type=\"number\" value={calories} onChange={(e) => setCalories(e.target.value)} required />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Protein per 100g:</label>\r\n          <input type=\"number\" step=\"0.01\" value={protein} onChange={(e) => setProtein(e.target.value)} required />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Carbohydrate per 100g:</label>\r\n          <input type=\"number\" step=\"0.01\" value={carbohydrates} onChange={(e) => setCarbohydrates(e.target.value)} required />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fat per 100g:</label>\r\n          <input type=\"number\" step=\"0.01\" value={fat} onChange={(e) => setFat(e.target.value)} required />\r\n        </div>\r\n\r\n        {renderNutritionalSection('Carbohydrates', nutritionalInfo.Carbohydrates, 'Carbohydrate Information')}\r\n        {renderNutritionalSection('Vitamins', nutritionalInfo.Vitamins, 'Vitamin Information')}\r\n        {renderNutritionalSection('AminoAcids', nutritionalInfo.AminoAcids, 'Amino Acid Information')}\r\n        {renderNutritionalSection('Fats', nutritionalInfo.Fats, 'Fat Information')}\r\n        {renderNutritionalSection('Minerals', nutritionalInfo.Minerals, 'Mineral Information')}\r\n        {renderNutritionalSection('Sterols', nutritionalInfo.Sterols, 'Sterol Information')}\r\n        {renderNutritionalSection('More', nutritionalInfo.More, 'More Information')}\r\n\r\n        <button type=\"submit\" className=\"submit-button\">Add Consumable</button>\r\n      </form>\r\n\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n      {isLoading && <p>Loading...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddConsumableForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}