{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\Forms\\\\GeneralForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Form, Button, Container, Alert } from \"react-bootstrap\";\nimport \"../../css/GeneralForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"https://localhost:7009/api\";\nconst GeneralForm = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [initialEmail, setInitialEmail] = useState(\"\");\n  const [message, setMessage] = useState({\n    type: \"\",\n    content: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchEmail = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/user/profile`, {\n        method: \"GET\",\n        credentials: \"include\"\n      });\n      if (!response.ok) throw new Error(\"Failed to retrieve email\");\n      const {\n        email\n      } = await response.json();\n      setInitialEmail(email);\n      setEmail(email);\n    } catch (err) {\n      setMessage({\n        type: \"danger\",\n        content: err.message\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchEmail();\n  }, [fetchEmail]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const trimmedEmail = email.trim();\n    if (!trimmedEmail) {\n      setMessage({\n        type: \"danger\",\n        content: \"Email cannot be empty\"\n      });\n      return;\n    }\n    if (trimmedEmail === initialEmail) {\n      setMessage({\n        type: \"danger\",\n        content: \"Email has not changed\"\n      });\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/user/change-profile-info`, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: trimmedEmail\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to update email\");\n      setMessage({\n        type: \"success\",\n        content: \"Email updated successfully!\"\n      });\n      setInitialEmail(trimmedEmail);\n    } catch (err) {\n      setMessage({\n        type: \"danger\",\n        content: err.message\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"general-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"General Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), message.content && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: message.type,\n      children: message.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"fancy-button\",\n        disabled: isLoading,\n        children: isLoading ? \"Updating...\" : \"Update Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneralForm, \"V9NCjb0g04oqLwdsm72t25MG+E0=\");\n_c = GeneralForm;\nexport default GeneralForm;\nvar _c;\n$RefreshReg$(_c, \"GeneralForm\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Form","Button","Container","Alert","jsxDEV","_jsxDEV","API_BASE_URL","GeneralForm","_s","email","setEmail","initialEmail","setInitialEmail","message","setMessage","type","content","isLoading","setIsLoading","fetchEmail","response","fetch","method","credentials","ok","Error","json","err","handleSubmit","e","preventDefault","trimmedEmail","trim","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","controlId","Label","Control","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/Forms/GeneralForm.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Form, Button, Container, Alert } from \"react-bootstrap\";\r\nimport \"../../css/GeneralForm.css\";\r\n\r\nconst API_BASE_URL = \"https://localhost:7009/api\";\r\n\r\nconst GeneralForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [initialEmail, setInitialEmail] = useState(\"\");\r\n  const [message, setMessage] = useState({ type: \"\", content: \"\" });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const fetchEmail = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/user/profile`, {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to retrieve email\");\r\n\r\n      const { email } = await response.json();\r\n      setInitialEmail(email);\r\n      setEmail(email);\r\n    } catch (err) {\r\n      setMessage({ type: \"danger\", content: err.message });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchEmail();\r\n  }, [fetchEmail]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const trimmedEmail = email.trim();\r\n\r\n    if (!trimmedEmail) {\r\n      setMessage({ type: \"danger\", content: \"Email cannot be empty\" });\r\n      return;\r\n    }\r\n\r\n    if (trimmedEmail === initialEmail) {\r\n      setMessage({ type: \"danger\", content: \"Email has not changed\" });\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/user/change-profile-info`, {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email: trimmedEmail }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to update email\");\r\n\r\n      setMessage({ type: \"success\", content: \"Email updated successfully!\" });\r\n      setInitialEmail(trimmedEmail);\r\n    } catch (err) {\r\n      setMessage({ type: \"danger\", content: err.message });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"general-form\">\r\n      <h2>General Information</h2>\r\n      {message.content && (\r\n        <Alert variant={message.type}>{message.content}</Alert>\r\n      )}\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Enter your email\"\r\n          />\r\n        </Form.Group>\r\n        <Button\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          className=\"fancy-button\"\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? \"Updating...\" : \"Update Email\"}\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GeneralForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}