{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\Forms\\\\AddActivityCategoryForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CustomForm from \"../CustomForm.js\";\nimport \"../../css/AddActivityCategoryForm.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddActivityCategoryForm = () => {\n  _s();\n  const [activityCategory, setActivityCategory] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrorMessage(\"\");\n    setSuccessMessage(\"\");\n    // try {\n    //   const response = await fetch(\n    //     \"https://localhost:7009/api/admin/add-activity-category\",\n    //     {\n    //       method: \"POST\",\n    //       credentials: \"include\",\n    //       headers: {\n    //         \"Content-Type\": \"application/json\",\n    //       },\n    //       body: JSON.stringify(activityCategory),\n    //     }\n    //   );\n\n    //   if (!response.ok) {\n    //     throw new Error(\"Adding an activity category failed!\");\n    //   }\n    try {\n      console.log(`Activity category is set to ${activityCategory}`);\n      setSuccessMessage(\"Activity category has been added successfully!\");\n      resetForm();\n    } catch (err) {\n      setErrorMessage(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleChange = e => {\n    setActivityCategory(e.target.value);\n  };\n  const resetForm = () => {\n    setActivityCategory(\"\");\n  };\n  const formOptions = [{\n    title: \"Activity Category Name\",\n    type: \"text\",\n    value: activityCategory,\n    handleChange: handleChange,\n    isRequired: true,\n    placeholder: \"Enter activity group name\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CustomForm, {\n      title: \"Add Activity Category\",\n      handleSubmit: handleSubmit,\n      formOptions: formOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(AddActivityCategoryForm, \"VfuVv+dzvum9RcjJ4Gx8X+piAog=\");\n_c = AddActivityCategoryForm;\nexport default AddActivityCategoryForm;\nvar _c;\n$RefreshReg$(_c, \"AddActivityCategoryForm\");","map":{"version":3,"names":["React","useState","CustomForm","jsxDEV","_jsxDEV","Fragment","_Fragment","AddActivityCategoryForm","_s","activityCategory","setActivityCategory","handleSubmit","e","preventDefault","setIsLoading","setErrorMessage","setSuccessMessage","console","log","resetForm","err","message","handleChange","target","value","formOptions","title","type","isRequired","placeholder","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/Forms/AddActivityCategoryForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport CustomForm from \"../CustomForm.js\";\r\nimport \"../../css/AddActivityCategoryForm.css\";\r\n\r\nconst AddActivityCategoryForm = () => {\r\n  const [activityCategory, setActivityCategory] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setErrorMessage(\"\");\r\n    setSuccessMessage(\"\");\r\n    // try {\r\n    //   const response = await fetch(\r\n    //     \"https://localhost:7009/api/admin/add-activity-category\",\r\n    //     {\r\n    //       method: \"POST\",\r\n    //       credentials: \"include\",\r\n    //       headers: {\r\n    //         \"Content-Type\": \"application/json\",\r\n    //       },\r\n    //       body: JSON.stringify(activityCategory),\r\n    //     }\r\n    //   );\r\n\r\n    //   if (!response.ok) {\r\n    //     throw new Error(\"Adding an activity category failed!\");\r\n    //   }\r\n    try {\r\n      console.log(`Activity category is set to ${activityCategory}`);\r\n      setSuccessMessage(\"Activity category has been added successfully!\");\r\n      resetForm();\r\n    } catch (err) {\r\n      setErrorMessage(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setActivityCategory(e.target.value);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setActivityCategory(\"\");\r\n  };\r\n\r\n  const formOptions = [\r\n    {\r\n      title: \"Activity Category Name\",\r\n      type: \"text\",\r\n      value: activityCategory,\r\n      handleChange: handleChange,\r\n      isRequired: true,\r\n      placeholder: \"Enter activity group name\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <CustomForm\r\n        title=\"Add Activity Category\"\r\n        handleSubmit={handleSubmit}\r\n        formOptions={formOptions}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddActivityCategoryForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5D,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,YAAY,CAAC,IAAI,CAAC;IAClBC,eAAe,CAAC,EAAE,CAAC;IACnBC,iBAAiB,CAAC,EAAE,CAAC;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,+BAA+BT,gBAAgB,EAAE,CAAC;MAC9DO,iBAAiB,CAAC,gDAAgD,CAAC;MACnEG,SAAS,CAAC,CAAC;IACb,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZL,eAAe,CAACK,GAAG,CAACC,OAAO,CAAC;IAC9B,CAAC,SAAS;MACRP,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMQ,YAAY,GAAIV,CAAC,IAAK;IAC1BF,mBAAmB,CAACE,CAAC,CAACW,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAML,SAAS,GAAGA,CAAA,KAAM;IACtBT,mBAAmB,CAAC,EAAE,CAAC;EACzB,CAAC;EAED,MAAMe,WAAW,GAAG,CAClB;IACEC,KAAK,EAAE,wBAAwB;IAC/BC,IAAI,EAAE,MAAM;IACZH,KAAK,EAAEf,gBAAgB;IACvBa,YAAY,EAAEA,YAAY;IAC1BM,UAAU,EAAE,IAAI;IAChBC,WAAW,EAAE;EACf,CAAC,CACF;EAED,oBACEzB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,eACE1B,OAAA,CAACF,UAAU;MACTwB,KAAK,EAAC,uBAAuB;MAC7Bf,YAAY,EAAEA,YAAa;MAC3Bc,WAAW,EAAEA;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B;EAAC,gBACF,CAAC;AAEP,CAAC;AAAC1B,EAAA,CA/DID,uBAAuB;AAAA4B,EAAA,GAAvB5B,uBAAuB;AAiE7B,eAAeA,uBAAuB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}