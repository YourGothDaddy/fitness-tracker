{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\Forms\\\\AddActivityTypeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Container, Form, Alert, Spinner, Button } from \"react-bootstrap\";\nimport \"../../css/CustomForm.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddActivityTypeForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    activityType: \"\",\n    selectedActivityCategoryId: \"\"\n  });\n  const [status, setStatus] = useState({\n    error: \"\",\n    success: \"\",\n    isLoading: false\n  });\n  const [activityOptions, setActivityOptions] = useState([]);\n  const fetchOptions = useCallback(async () => {\n    try {\n      const response = await fetch(\"https://localhost:7009/api/admin/get-activity-categories\", {\n        method: \"GET\",\n        credentials: \"include\"\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch activity categories\");\n      const data = await response.json();\n      setActivityOptions(data);\n    } catch (err) {\n      console.error(\"Couldn't retrieve options:\", err);\n      setStatus(prev => ({\n        ...prev,\n        error: \"Failed to load activity categories\"\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    fetchOptions();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setStatus({\n      error: \"\",\n      success: \"\",\n      isLoading: true\n    });\n    try {\n      const response = await fetch(\"https://localhost:7009/api/admin/add-activity-type\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          Name: formData.activityType,\n          ActivityCategoryId: formData.selectedActivityCategoryId\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || \"Failed to add activity type\");\n      setStatus(prev => ({\n        ...prev,\n        success: data.message\n      }));\n      setFormData(prev => ({\n        ...prev,\n        activityType: \"\"\n      }));\n    } catch (err) {\n      console.error(err);\n      setStatus(prev => ({\n        ...prev,\n        error: err.message\n      }));\n    } finally {\n      setStatus(prev => ({\n        ...prev,\n        isLoading: false\n      }));\n    }\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prev => ({\n      ...prev,\n      [name === \"Activity Type Name\" ? \"activityType\" : \"selectedActivityCategoryId\"]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"custom-form-container mt-5 mb-5 p-4\",\n    children: [status.error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      className: \"mt-3\",\n      children: status.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), status.success && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      className: \"mt-3\",\n      children: status.success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"custom-form-label\",\n          children: \"Activity Type Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"Activity Type Name\",\n          value: formData.activityType,\n          onChange: handleChange,\n          required: true,\n          placeholder: \"Enter activity type name\",\n          className: \"custom-form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"custom-form-label\",\n          children: \"Select an Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          name: \"Activity Category\",\n          value: formData.selectedActivityCategoryId,\n          onChange: handleChange,\n          required: true,\n          className: \"custom-form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Choose an option...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), activityOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.id,\n            children: option.name\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        disabled: status.isLoading,\n        className: \"custom-submit-button\",\n        children: status.isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Spinner, {\n            as: \"span\",\n            animation: \"border\",\n            size: \"sm\",\n            role: \"status\",\n            \"aria-hidden\": \"true\",\n            className: \"me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), \"Loading...\"]\n        }, void 0, true) : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(AddActivityTypeForm, \"v6wA+7XebLWR1/+uqNied2+bQpk=\");\n_c = AddActivityTypeForm;\nexport default AddActivityTypeForm;\nvar _c;\n$RefreshReg$(_c, \"AddActivityTypeForm\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Container","Form","Alert","Spinner","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","AddActivityTypeForm","_s","formData","setFormData","activityType","selectedActivityCategoryId","status","setStatus","error","success","isLoading","activityOptions","setActivityOptions","fetchOptions","response","fetch","method","credentials","ok","Error","data","json","err","console","prev","handleSubmit","e","preventDefault","headers","body","JSON","stringify","Name","ActivityCategoryId","message","handleChange","event","name","value","target","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","Label","Control","type","onChange","required","placeholder","Select","disabled","map","option","id","as","animation","size","role","_c","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/Forms/AddActivityTypeForm.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Container, Form, Alert, Spinner, Button } from \"react-bootstrap\";\r\nimport \"../../css/CustomForm.css\";\r\n\r\nconst AddActivityTypeForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    activityType: \"\",\r\n    selectedActivityCategoryId: \"\",\r\n  });\r\n  const [status, setStatus] = useState({\r\n    error: \"\",\r\n    success: \"\",\r\n    isLoading: false,\r\n  });\r\n  const [activityOptions, setActivityOptions] = useState([]);\r\n\r\n  const fetchOptions = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://localhost:7009/api/admin/get-activity-categories\",\r\n        { method: \"GET\", credentials: \"include\" }\r\n      );\r\n      if (!response.ok) throw new Error(\"Failed to fetch activity categories\");\r\n      const data = await response.json();\r\n      setActivityOptions(data);\r\n    } catch (err) {\r\n      console.error(\"Couldn't retrieve options:\", err);\r\n      setStatus((prev) => ({\r\n        ...prev,\r\n        error: \"Failed to load activity categories\",\r\n      }));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchOptions();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setStatus({ error: \"\", success: \"\", isLoading: true });\r\n    try {\r\n      const response = await fetch(\r\n        \"https://localhost:7009/api/admin/add-activity-type\",\r\n        {\r\n          method: \"POST\",\r\n          credentials: \"include\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            Name: formData.activityType,\r\n            ActivityCategoryId: formData.selectedActivityCategoryId,\r\n          }),\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (!response.ok)\r\n        throw new Error(data.message || \"Failed to add activity type\");\r\n      setStatus((prev) => ({ ...prev, success: data.message }));\r\n      setFormData((prev) => ({ ...prev, activityType: \"\" }));\r\n    } catch (err) {\r\n      console.error(err);\r\n      setStatus((prev) => ({ ...prev, error: err.message }));\r\n    } finally {\r\n      setStatus((prev) => ({ ...prev, isLoading: false }));\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name === \"Activity Type Name\"\r\n        ? \"activityType\"\r\n        : \"selectedActivityCategoryId\"]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Container className=\"custom-form-container mt-5 mb-5 p-4\">\r\n      {status.error && (\r\n        <Alert variant=\"danger\" className=\"mt-3\">\r\n          {status.error}\r\n        </Alert>\r\n      )}\r\n      {status.success && (\r\n        <Alert variant=\"success\" className=\"mt-3\">\r\n          {status.success}\r\n        </Alert>\r\n      )}\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-4\">\r\n          <Form.Label className=\"custom-form-label\">\r\n            Activity Type Name\r\n          </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"Activity Type Name\"\r\n            value={formData.activityType}\r\n            onChange={handleChange}\r\n            required\r\n            placeholder=\"Enter activity type name\"\r\n            className=\"custom-form-control\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-4\">\r\n          <Form.Label className=\"custom-form-label\">\r\n            Select an Option\r\n          </Form.Label>\r\n          <Form.Select\r\n            name=\"Activity Category\"\r\n            value={formData.selectedActivityCategoryId}\r\n            onChange={handleChange}\r\n            required\r\n            className=\"custom-form-control\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              Choose an option...\r\n            </option>\r\n            {activityOptions.map((option) => (\r\n              <option key={option.id} value={option.id}>\r\n                {option.name}\r\n              </option>\r\n            ))}\r\n          </Form.Select>\r\n        </Form.Group>\r\n        <Button\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          disabled={status.isLoading}\r\n          className=\"custom-submit-button\"\r\n        >\r\n          {status.isLoading ? (\r\n            <>\r\n              <Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n                className=\"me-2\"\r\n              />\r\n              Loading...\r\n            </>\r\n          ) : (\r\n            \"Add\"\r\n          )}\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddActivityTypeForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}