{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\Forms\\\\GeneralForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../css/GeneralForm.css';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneralForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchEmail = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch('https://localhost:7009/api/user/profile', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Retrieving email failed');\n        }\n        const data = await response.json();\n        const initialEmail = data.email;\n        setEmail(data.email);\n        setErrorMessage('');\n      } catch (err) {\n        setErrorMessage(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchEmail();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!email.trim()) {\n      setErrorMessage('Email cannot be empty');\n      setSuccessMessage('');\n      return;\n    }\n    if (email == initialEmail) {\n      setErrorMessage('Email has not changed');\n      setSuccessMessage('');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await fetch('https://localhost:7009/api/user/change-profile-info', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Changing data failed');\n      }\n      setSuccessMessage('Email updated successfully!');\n      setErrorMessage('');\n    } catch (err) {\n      setErrorMessage(err.message);\n      setSuccessMessage('');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"general-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"General Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      role: \"alert\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      className: \"general-form\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"fancy-button\",\n        disabled: isLoading,\n        children: isLoading ? 'Updating...' : 'Update Email'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneralForm, \"4F5qLHNwCxicUTBB8nh2Po6e59w=\");\n_c = GeneralForm;\nexport default GeneralForm;\nvar _c;\n$RefreshReg$(_c, \"GeneralForm\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Container","jsxDEV","_jsxDEV","GeneralForm","_s","email","setEmail","successMessage","setSuccessMessage","errorMessage","setErrorMessage","isLoading","setIsLoading","fetchEmail","response","fetch","method","credentials","ok","Error","data","json","initialEmail","err","message","handleSubmit","e","preventDefault","trim","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onSubmit","Group","controlId","Label","Control","type","value","onChange","target","placeholder","variant","disabled","_c","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/Forms/GeneralForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../css/GeneralForm.css';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\n\r\nconst GeneralForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchEmail = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch('https://localhost:7009/api/user/profile', {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Retrieving email failed');\r\n        }\r\n\r\n        const data = await response.json();\r\n        const initialEmail = data.email;\r\n        setEmail(data.email);\r\n        setErrorMessage('');\r\n      } catch (err) {\r\n        setErrorMessage(err.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchEmail();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!email.trim()) {\r\n      setErrorMessage('Email cannot be empty');\r\n      setSuccessMessage('');\r\n      return;\r\n    }\r\n\r\n    if(email == initialEmail){\r\n      setErrorMessage('Email has not changed');\r\n      setSuccessMessage('');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await fetch('https://localhost:7009/api/user/change-profile-info', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Changing data failed');\r\n      }\r\n\r\n      setSuccessMessage('Email updated successfully!');\r\n      setErrorMessage('');\r\n    } catch (err) {\r\n      setErrorMessage(err.message);\r\n      setSuccessMessage('');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"general-form\">\r\n      <h2>General Information</h2>\r\n      {errorMessage && (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          {errorMessage}\r\n        </div>\r\n      )}\r\n      {successMessage && (\r\n        <div className=\"alert alert-success\" role=\"alert\">\r\n          {successMessage}\r\n        </div>\r\n      )}\r\n      <Form onSubmit={handleSubmit} className=\"general-form\">\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Enter your email\"\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" className=\"fancy-button\" disabled={isLoading}>\r\n          {isLoading ? 'Updating...' : 'Update Email'}\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GeneralForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}