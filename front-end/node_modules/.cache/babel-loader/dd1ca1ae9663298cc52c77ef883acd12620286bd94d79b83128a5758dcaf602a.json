{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexander\\\\Software Developement\\\\repos\\\\Web2\\\\Fitness-Tracker\\\\front-end\\\\src\\\\components\\\\Pages\\\\AllMealsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../../css/AllMealsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllMealsPage = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [calories, setCalories] = useState(0);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    const fetchMeals = async () => {\n      try {\n        const response = await fetch('https://localhost:7009/api/meal/all', {\n          method: 'POST',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Displaying meals failed');\n        }\n        const data = await response.json();\n        setMeals(data);\n        setErrorMessage('');\n      } catch (err) {\n        setErrorMessage(err.message);\n      }\n    };\n    fetchMeals();\n  }, []);\n  useEffect(() => {\n    const fetchCalories = async () => {\n      try {\n        const response = await fetch('https://localhost:7009/api/meal/calories', {\n          method: 'POST',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Displaying calories failed');\n        }\n        const data = await response.json();\n        setCalories(data);\n        setErrorMessage('');\n      } catch (err) {\n        setErrorMessage(err.message);\n      }\n    };\n    fetchMeals();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-meals-container\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Izabela e urodche\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"meals-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Meal Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Meal of the Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Calories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: meals.map(meal => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: meal.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: MealOfTheDayLabel(meal.mealOfTheDay)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: meal.calories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)]\n          }, meal.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(AllMealsPage, \"NFJEoEdlKfeuYUZg1aJSXhEKCGg=\");\n_c = AllMealsPage;\nconst MealOfTheDayLabel = mealOfTheDay => {\n  switch (mealOfTheDay) {\n    case 0:\n      return 'Breakfast';\n    case 1:\n      return 'Lunch';\n    case 2:\n      return 'Dinner';\n    case 3:\n      return 'Snack';\n    default:\n      return 'Unknown';\n  }\n};\n_c2 = MealOfTheDayLabel;\nexport default AllMealsPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"AllMealsPage\");\n$RefreshReg$(_c2, \"MealOfTheDayLabel\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AllMealsPage","_s","meals","setMeals","calories","setCalories","errorMessage","setErrorMessage","fetchMeals","response","fetch","method","credentials","ok","Error","data","json","err","message","fetchCalories","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","meal","name","MealOfTheDayLabel","mealOfTheDay","id","_c","_c2","$RefreshReg$"],"sources":["C:/Alexander/Software Developement/repos/Web2/Fitness-Tracker/front-end/src/components/Pages/AllMealsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../../css/AllMealsPage.css';\r\n\r\nconst AllMealsPage = () => {\r\n    const [meals, setMeals] = useState([]);\r\n    const [calories, setCalories] = useState(0);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchMeals = async () => {\r\n            try {\r\n                const response = await fetch('https://localhost:7009/api/meal/all', {\r\n                    method: 'POST',\r\n                    credentials: 'include',\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Displaying meals failed');\r\n                }\r\n\r\n                const data = await response.json();\r\n                setMeals(data);\r\n                setErrorMessage('');\r\n            } catch (err) {\r\n                setErrorMessage(err.message);\r\n            }\r\n        };\r\n\r\n        fetchMeals();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchCalories = async () => {\r\n            try {\r\n                const response = await fetch('https://localhost:7009/api/meal/calories', {\r\n                    method: 'POST',\r\n                    credentials: 'include',\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Displaying calories failed');\r\n                }\r\n\r\n                const data = await response.json();\r\n                setCalories(data);\r\n                setErrorMessage('');\r\n            } catch (err) {\r\n                setErrorMessage(err.message);\r\n            }\r\n        };\r\n\r\n        fetchMeals();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"all-meals-container\">\r\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n            <h1>Izabela e urodche</h1>\r\n            <div className=\"table-wrapper\">\r\n                <table className=\"meals-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Meal Name</th>\r\n                            <th>Meal of the Day</th>\r\n                            <th>Calories</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {meals.map((meal) => (\r\n                            <tr key={meal.id}>\r\n                                <td>{meal.name}</td>\r\n                                <td>{MealOfTheDayLabel(meal.mealOfTheDay)}</td>\r\n                                <td>{meal.calories}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MealOfTheDayLabel = (mealOfTheDay) => {\r\n    switch (mealOfTheDay) {\r\n        case 0:\r\n            return 'Breakfast';\r\n        case 1:\r\n            return 'Lunch';\r\n        case 2:\r\n            return 'Dinner';\r\n        case 3:\r\n            return 'Snack';\r\n        default:\r\n            return 'Unknown';\r\n    }\r\n};\r\n\r\nexport default AllMealsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}